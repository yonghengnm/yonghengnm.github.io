<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MSSQL基础-2</title>
      <link href="/2021/12/23/mssql-ji-chu-2/"/>
      <url>/2021/12/23/mssql-ji-chu-2/</url>
      
        <content type="html"><![CDATA[<h2 id="第六章-T-SQL"><a href="#第六章-T-SQL" class="headerlink" title="第六章 T-SQL"></a>第六章 T-SQL</h2><h3 id="T-SQL"><a href="#T-SQL" class="headerlink" title="T-SQL"></a>T-SQL</h3><p>​        T-SQL（Transact Structured Query Language）是标准的Microsoft SQL Server的扩展。是标准的SQL程序设计语言的增强版，是用来让程序与SQL Server沟通的主要语言。T-SQL语言主要由以下几部分组成：</p><p>​       1.数据定义语言：用于数据库系统中对数据库、表、视图、索引等数据库对象进行创建和管理。</p><p>​       2.数据控制语言：用于实现对数据库中数据的完整性，安全性等的控制。</p><p>​       3.数据操纵语言：用于插入、修改、删除和查询数据库中的数据。</p><p>T-SQL 语言结构如下：</p><p>SELECT 子句</p><p>[INTO 子句]</p><p>FROM 子句</p><p>[WHERE 子句]</p><p>[GROUP BY 子句]</p><p>[HAVING 子句]</p><p>[ORDER BY 子句]</p><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><p>​        数据在内存中存储始终不变化的量叫常量。常量，也称为文字值或标量值，是表示一个特定数据值的符号。常量的格式取决于它所表示的值的数据类型。</p><p>常见的常量有：</p><ol><li>数字常量</li><li>字符串常量</li><li>日期和时间常量</li><li>符号常量</li></ol><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>​        数据在内存中存储可以变化的量叫变量。为了在内存存储信息，用户必须指定存储信息的单元，并为该存储单元命名，以方便获取信息，这就是变量的功能。Transact-SQL可以使用两种变量，一种是局部变量，另外一种是全局变量。局部变量和全局变量的主要区别在于存储的数据作用范围不一样。<br>​        局部变量是用户可自定义的变量，它的作用范围仅在程序内部。局部变量的名称是用户自定义的，命名的局部变量名要符合SQL Server 200S标识符命名规则，局部变量名必须以<br>@开头。<br>​        全局变量是SQL Server系统内部事先定义好的变量，不用用户参与定义，对用户而言，其作用范围并不局限于某一程序，而是任何程序均可随时调用。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DECLARE</span> <span class="token variable">@SONG</span> <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token keyword">SET</span> <span class="token variable">@SONG</span><span class="token operator">=</span><span class="token string">'China'</span><span class="token keyword">PRINT</span> <span class="token variable">@SONG</span><span class="token keyword">DECLARE</span> <span class="token variable">@STR</span> <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">@A</span> <span class="token keyword">INT</span><span class="token punctuation">,</span><span class="token variable">@B</span> <span class="token keyword">INT</span><span class="token keyword">SELECT</span> <span class="token variable">@STR</span><span class="token operator">=</span><span class="token string">'USA'</span><span class="token punctuation">,</span><span class="token variable">@A</span><span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token variable">@B</span><span class="token operator">=</span><span class="token number">123</span><span class="token keyword">PRINT</span> <span class="token variable">@STR</span><span class="token keyword">PRINT</span> <span class="token variable">@A</span><span class="token keyword">PRINT</span> <span class="token variable">@B</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="注释符-运算符与通配符"><a href="#注释符-运算符与通配符" class="headerlink" title="注释符 运算符与通配符"></a>注释符 运算符与通配符</h3><p>​        注释语句不是可执行语句，不参与程序的编译，通常是一些说明性的文字，对代码的功能或者代码的实现方式给出简要的解释和提示。<br>​        运算符是一种符号，用来进行常量、变量或者列之间的数学运算和比较操作，它是Transact-SQL语言很重要的部分。运算符有几种类型，分别为：算术运算符、赋值运算符、比较运算符、逻辑运算符、位运算符、连接运算符。<br>​        在涉及模式匹配的字符串比较中使用%、_（下划线）、[]、[^]等通配符。</p><blockquote><p>注释符</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--我是单行注释1</span><span class="token comment">--我是单行注释2</span><span class="token comment">/*我是多行注释1我是多行注释2*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>运算符</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">---运算符 取余</span><span class="token keyword">DECLARE</span> <span class="token variable">@x</span> <span class="token keyword">int</span><span class="token punctuation">,</span><span class="token variable">@y</span> <span class="token keyword">int</span><span class="token punctuation">,</span><span class="token variable">@z</span> <span class="token keyword">int</span><span class="token keyword">SELECT</span> <span class="token variable">@x</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token variable">@y</span><span class="token operator">=</span><span class="token number">5</span><span class="token keyword">SET</span> <span class="token variable">@z</span><span class="token operator">=</span><span class="token variable">@x</span><span class="token operator">%</span><span class="token variable">@y</span><span class="token keyword">PRINT</span> <span class="token variable">@z</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>逻辑运算符</p></blockquote><p>优先级：NOT &gt; AND &gt; OR</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">---逻辑运算符</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> Student<span class="token keyword">WHERE</span> 性别<span class="token operator">=</span><span class="token string">'女'</span> <span class="token operator">AND</span> 年龄<span class="token operator">></span><span class="token number">24</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>连接运算符</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">---连接运算符</span><span class="token keyword">DECLARE</span> <span class="token variable">@name</span> <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token keyword">SET</span> <span class="token variable">@name</span><span class="token operator">=</span><span class="token string">'基督山伯爵'</span><span class="token keyword">PRINT</span> <span class="token string">'该小说名称是：'</span><span class="token operator">+</span><span class="token variable">@name</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>通配符</p></blockquote><p>​        匹配指定范围内或者属于方括号所指定的集合中的任意单个字符。可以在涉及模式匹配的字符串比较（例如 LIKE 和 PATINDEX ）中使用这些通配符</p><p>在SQL中通常用LINK关键字与通配符结合起来实现模糊查询。其中SQL支持的通配符如表所示。</p><table><thead><tr><th>通配符</th><th>描述</th><th>示例</th></tr></thead><tbody><tr><td>%</td><td>包含零个或更多字符的任意字符</td><td>“张%” 可以表示：“张三”、“张四”、“张有人”</td></tr><tr><td>_下划线</td><td>任何单个字符</td><td>“张_” 可以表示：“张三”、“张四”</td></tr><tr><td>[]</td><td>指定范围[a~z]或集合[abcdef]中的任何单个字符</td><td>[0<del>9]123表示0</del>9之间任意一个字符开头,以‘123’结尾的字符</td></tr><tr><td>[^]</td><td>不属于指定范围（[a-f]）或集合（[abcdef]）的任何单个字符</td><td>[^0<del>5]123表示0</del>5之间任意一个字符开头,却以‘123’结尾的字符</td></tr></tbody></table><h3 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h3><p>​        流程控制语句是用来控制程序执行流程的语句。使用流程控制语句可以提高编程语言的处理能力。与程序设计语言（如C语言）一样，Transact-SQL语言提供的流程控制语句如下所示</p><p>BEGIN…END  WAITFOR   GOTO  WHILE  IF..ELSE  BREAK  RETURN  CONTINUE</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DECLARE</span> <span class="token variable">@x</span> <span class="token keyword">int</span><span class="token punctuation">,</span><span class="token variable">@y</span> <span class="token keyword">int</span><span class="token punctuation">,</span><span class="token variable">@t</span> <span class="token keyword">int</span><span class="token keyword">SELECT</span> <span class="token variable">@x</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token variable">@y</span><span class="token operator">=</span><span class="token number">2</span><span class="token keyword">BEGIN</span><span class="token keyword">SET</span> <span class="token variable">@t</span><span class="token operator">=</span><span class="token variable">@x</span><span class="token keyword">SET</span> <span class="token variable">@x</span><span class="token operator">=</span><span class="token variable">@y</span><span class="token keyword">SET</span> <span class="token variable">@y</span><span class="token operator">=</span><span class="token variable">@t</span><span class="token keyword">END</span><span class="token keyword">PRINT</span> <span class="token variable">@x</span><span class="token keyword">PRINT</span> <span class="token variable">@y</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DECLARE</span> <span class="token variable">@x</span> <span class="token keyword">int</span><span class="token keyword">SET</span> <span class="token variable">@x</span><span class="token operator">=</span><span class="token number">3</span><span class="token keyword">if</span> <span class="token variable">@x</span><span class="token operator">></span><span class="token number">0</span><span class="token keyword">PRINT</span> <span class="token string">'@x是正数'</span><span class="token keyword">PRINT</span> <span class="token string">'end'</span><span class="token keyword">DECLARE</span> <span class="token variable">@y</span> <span class="token keyword">int</span><span class="token keyword">SET</span> <span class="token variable">@y</span><span class="token operator">=</span><span class="token number">8</span><span class="token keyword">IF</span> <span class="token variable">@y</span><span class="token operator">%</span><span class="token number">2</span><span class="token operator">=</span><span class="token number">0</span><span class="token keyword">PRINT</span> <span class="token string">'@y是偶数'</span><span class="token keyword">PRINT</span> <span class="token string">'end'</span><span class="token keyword">DECLARE</span> <span class="token variable">@q</span> <span class="token keyword">int</span><span class="token punctuation">,</span><span class="token variable">@w</span> <span class="token keyword">int</span><span class="token keyword">SELECT</span> <span class="token variable">@q</span><span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token variable">@w</span><span class="token operator">=</span><span class="token number">5</span><span class="token keyword">IF</span> <span class="token variable">@q</span><span class="token operator">></span><span class="token variable">@w</span><span class="token keyword">PRINT</span> <span class="token string">'@q大于@w'</span><span class="token keyword">ELSE</span><span class="token keyword">PRINT</span> <span class="token string">'@q小于@w'</span><span class="token comment">---判断象限</span><span class="token keyword">DECLARE</span> <span class="token variable">@x2</span> <span class="token keyword">int</span><span class="token punctuation">,</span><span class="token variable">@y2</span> <span class="token keyword">int</span><span class="token keyword">SELECT</span> <span class="token variable">@x2</span><span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token variable">@y</span><span class="token operator">=</span><span class="token operator">-</span><span class="token number">3</span><span class="token keyword">IF</span> <span class="token variable">@x2</span><span class="token operator">></span><span class="token number">0</span><span class="token keyword">IF</span> <span class="token variable">@y</span><span class="token operator">></span><span class="token number">0</span><span class="token keyword">PRINT</span> <span class="token string">'@x2@y2位于第一象限'</span><span class="token keyword">ELSE</span><span class="token keyword">PRINT</span> <span class="token string">'@x2@y2位于第四象限'</span><span class="token keyword">ELSE</span><span class="token keyword">IF</span> <span class="token variable">@y2</span><span class="token operator">></span><span class="token number">0</span><span class="token keyword">PRINT</span> <span class="token string">'@x2@y2位于第二象限'</span><span class="token keyword">ELSE</span><span class="token keyword">PRINT</span> <span class="token string">'@x2@y2位于第三象限'</span><span class="token keyword">DECLARE</span> <span class="token variable">@n</span> <span class="token keyword">int</span><span class="token punctuation">,</span><span class="token variable">@sum</span> <span class="token keyword">int</span><span class="token keyword">SELECT</span> <span class="token variable">@n</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token variable">@SUM</span><span class="token operator">=</span><span class="token number">0</span><span class="token keyword">WHILE</span> <span class="token variable">@n</span><span class="token operator">&lt;=</span><span class="token number">10</span><span class="token keyword">BEGIN</span><span class="token keyword">SET</span> <span class="token variable">@sum</span><span class="token operator">=</span><span class="token variable">@sum</span><span class="token operator">+</span><span class="token variable">@n</span><span class="token keyword">SET</span> <span class="token variable">@n</span><span class="token operator">=</span><span class="token variable">@n</span><span class="token operator">+</span><span class="token number">1</span><span class="token keyword">END</span><span class="token keyword">PRINT</span> <span class="token variable">@sum</span><span class="token comment">--计算10以内的偶数和</span><span class="token keyword">DECLARE</span> <span class="token variable">@n2</span> <span class="token keyword">int</span><span class="token punctuation">,</span><span class="token variable">@sum2</span> <span class="token keyword">int</span><span class="token keyword">SELECT</span> <span class="token variable">@n2</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token variable">@sum2</span><span class="token operator">=</span><span class="token number">0</span><span class="token keyword">WHILE</span> <span class="token variable">@n2</span><span class="token operator">&lt;=</span><span class="token number">10</span><span class="token keyword">BEGIN</span><span class="token keyword">SET</span> <span class="token variable">@n2</span><span class="token operator">=</span><span class="token variable">@n2</span><span class="token operator">+</span><span class="token number">1</span><span class="token keyword">IF</span> <span class="token variable">@n2</span><span class="token operator">%</span><span class="token number">2</span><span class="token operator">=</span><span class="token number">0</span><span class="token keyword">SET</span> <span class="token variable">@sum2</span><span class="token operator">=</span><span class="token variable">@sum2</span><span class="token operator">+</span><span class="token variable">@n2</span><span class="token keyword">ELSE</span><span class="token keyword">CONTINUE</span><span class="token keyword">END</span><span class="token keyword">PRINT</span> <span class="token variable">@sum2</span><span class="token comment">---GOTO 跳转</span><span class="token keyword">DECLARE</span> <span class="token variable">@x3</span> <span class="token keyword">int</span><span class="token keyword">SELECT</span> <span class="token variable">@x3</span><span class="token operator">=</span><span class="token number">1</span>PP:<span class="token keyword">PRINT</span> <span class="token variable">@X3</span><span class="token keyword">SELECT</span> <span class="token variable">@x3</span><span class="token operator">=</span><span class="token variable">@x3</span><span class="token operator">+</span><span class="token number">1</span><span class="token keyword">WHILE</span> <span class="token variable">@x3</span><span class="token operator">&lt;=</span><span class="token number">3</span> <span class="token keyword">GOTO</span> PP<span class="token comment">---等待3秒后执行</span><span class="token keyword">WAITFOR</span> DELAY<span class="token string">'00:00:03'</span><span class="token keyword">PRINT</span> <span class="token string">'新年快乐'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="CASE函数"><a href="#CASE函数" class="headerlink" title="CASE函数"></a>CASE函数</h3><p>CASE函数用于计算条件列表并返回多个可能结果表达式之一</p><p>CASE函数具有两种格式：</p><p>简单CASE函数将某个表达式与一组简单表达式进行比较以确定结果</p><p>CASE搜索函数计算一组布尔表达式以确定结果</p><p>两个格式都支持可选的ELSE参数。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">---考试分数分等级</span><span class="token keyword">SELECT</span> title<span class="token punctuation">,</span>stuid<span class="token punctuation">,</span>SCO<span class="token punctuation">,</span>等级<span class="token operator">=</span><span class="token keyword">CASE</span><span class="token keyword">WHEN</span> sco <span class="token operator">>=</span> <span class="token number">90</span> <span class="token keyword">THEN</span> <span class="token string">'优秀'</span><span class="token keyword">WHEN</span> sco <span class="token operator">>=</span> <span class="token number">80</span> <span class="token operator">AND</span> sco <span class="token operator">&lt;</span><span class="token number">90</span> <span class="token keyword">THEN</span> <span class="token string">'良好'</span><span class="token keyword">WHEN</span> sco <span class="token operator">>=</span> <span class="token number">70</span> <span class="token operator">AND</span> sco <span class="token operator">&lt;</span><span class="token number">80</span> <span class="token keyword">THEN</span> <span class="token string">'中等'</span><span class="token keyword">WHEN</span> sco <span class="token operator">>=</span> <span class="token number">60</span> <span class="token operator">AND</span> sco <span class="token operator">&lt;</span><span class="token number">70</span> <span class="token keyword">THEN</span> <span class="token string">'及格'</span><span class="token keyword">ELSE</span> <span class="token string">'不及格'</span><span class="token keyword">END</span><span class="token keyword">FROM</span> stuco<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第七章-函数"><a href="#第七章-函数" class="headerlink" title="第七章 函数"></a>第七章 函数</h2><p>​        在SQL Server中提供了许多内置函数，按函数种类可以分为聚合函数、数学函数、字符串函数、日期时间函数、转换函数和元数据函数6种。</p><h3 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">---查询某学科总分</span><span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>Grade<span class="token punctuation">)</span> <span class="token keyword">AS</span> 总分 <span class="token keyword">FROM</span> sc <span class="token keyword">WHERE</span> Cno<span class="token operator">=</span><span class="token number">001</span><span class="token comment">---查询某学科平均分</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>Grade<span class="token punctuation">)</span> <span class="token keyword">AS</span> 平均分 <span class="token keyword">FROM</span> sc <span class="token keyword">WHERE</span> Cno<span class="token operator">=</span><span class="token number">001</span><span class="token comment">---查询某学科最低分</span><span class="token keyword">SELECT</span> <span class="token function">MIN</span><span class="token punctuation">(</span>Grade<span class="token punctuation">)</span> <span class="token keyword">AS</span> 最低分 <span class="token keyword">FROM</span> sc <span class="token keyword">WHERE</span> Cno<span class="token operator">=</span><span class="token number">001</span><span class="token comment">---查询某学科最高分</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>Grade<span class="token punctuation">)</span> <span class="token keyword">AS</span> 最高分 <span class="token keyword">FROM</span> sc <span class="token keyword">WHERE</span> Cno<span class="token operator">=</span><span class="token number">001</span><span class="token comment">---查询某学科分数计数</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>Grada<span class="token punctuation">)</span> <span class="token keyword">AS</span> 分数计数 <span class="token keyword">FROM</span> sc <span class="token keyword">WHERE</span> Cno<span class="token operator">=</span><span class="token number">001</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h3><p>​        数学函数可以对数据类型为整形（intger）、实型（real）、浮点型（float）、货币型（money）和smallmoney的列进行操作。它的返回值是6位小数，如果使用出错，则返回NULL值并显示提示信息，通常该函数可以用在SQL语句表达式中。常用的数学函数及说明如表所示</p><table><thead><tr><th>函数名称</th><th>说明</th><th>示例</th><th>结果</th></tr></thead><tbody><tr><td>ABS</td><td>返回指定的数字表达式的绝对值</td><td>SELECT ABS(-1)</td><td>1</td></tr><tr><td>COS</td><td>返回指定的表达式中指定的弧度的三角余玄值</td><td></td><td></td></tr><tr><td>COT</td><td>返回指定的表达式中指定的弧度的三角余切值</td><td></td><td></td></tr><tr><td>PI</td><td>返回值为圆周率</td><td>SELECT PI()</td><td>3.14159265358979</td></tr><tr><td>POWER</td><td>将指定的表达式乘指定次方</td><td>SELECT POWER(2,3)</td><td>8</td></tr><tr><td>RAND</td><td>返回0~1之间的随机float值</td><td>SELECT RAND()</td><td>随机的0.286702661673299</td></tr><tr><td>ROUND</td><td>将数字表达式四舍五入为指定的长度或精度</td><td>SELECT ROUND(123.9994,3)</td><td>123.9990</td></tr><tr><td>SIGN</td><td>返回指定表达式订单零（0）、正号（+）或负号（-）</td><td></td><td></td></tr><tr><td>SIN</td><td>返回指定表达式中指定弧度的三角正玄值</td><td></td><td></td></tr><tr><td>SQUARE</td><td>返回指定表达式平方</td><td>SELECT SQUARE(2)</td><td>4</td></tr><tr><td>SQRT</td><td>返回指定表达式平方根</td><td>SELECT SQRT(4)</td><td>2</td></tr><tr><td>TAN</td><td>返回指定表达式中指定弧度的三角正切值</td><td></td><td></td></tr></tbody></table><h3 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h3><p>​        字符串函数作用于char、varchar、binary和varbinary数据类型以及可以隐式转换为char或varchar的数据类型。常用的数学函数及说明如表所示</p><table><thead><tr><th>函数名称</th><th>说明</th><th>示例</th><th>结果</th></tr></thead><tbody><tr><td>ASCII</td><td>返回字符表达式最左端字符的ASCII代码值</td><td>SELECT ASCII(‘a’)</td><td>97</td></tr><tr><td>CHARINDEX</td><td>返回字符串中指定表达式的起始位置</td><td>SELECT CHARINDEX(‘中’,’美中不足’)</td><td>2</td></tr><tr><td>LEFT</td><td>从左边开始，取得字符串左边指定个数的字符</td><td>SELECT LEFT(‘张三’,1)</td><td>张</td></tr><tr><td>LEN</td><td>返回指定字符串的字符（而不是字节）个数</td><td>SELECT LEN(‘张三’)</td><td>2</td></tr><tr><td>REPLACE</td><td>将指定的字符串替换为另一指定的字符串</td><td>SELECT REPLACE(‘法外狂徒张三’,’张三’,’李四’)</td><td>法外狂徒李四</td></tr><tr><td>REVERSE</td><td>返回字符表达式的反转</td><td>SELECT REVERSE(‘法外狂徒张三’)</td><td>三张徒狂外法</td></tr><tr><td>RIGHT</td><td>从右边开始，取得字符串左边指定个数的字符</td><td>SELECT RIGHT(‘诸葛孔明’,2)</td><td>孔明</td></tr><tr><td>STR</td><td>返回由数字数据转换来的字符数据</td><td>SELECT STR(3.1415,10)</td><td>‘         3’</td></tr><tr><td>SUBSTRING</td><td>返回指定个数的字符</td><td>SELECT SUBSTRING(‘法外狂徒张三’,3,2)</td><td>狂徒</td></tr></tbody></table><h3 id="日期时间函数"><a href="#日期时间函数" class="headerlink" title="日期时间函数"></a>日期时间函数</h3><p>​        日期和时间函数主要用来操作datetime、smalldatetime类型的数据，日期和时间函数执行算术运行与其他函数一样，也可以在SQL语句的SELECT、WHERE子句以及表达式中使用。常用的数学函数及说明如表所示</p><table><thead><tr><th>函数名称</th><th>说明</th><th>示例</th><th>结果</th></tr></thead><tbody><tr><td>DATEADD</td><td>在向指定日期加上一段时间的基础上，返回新的datetime值</td><td>SELECT DATEADD(“YEAR”,100,’1949-10-1’)</td><td>2049-10-01 00:00:00.000</td></tr><tr><td>DATEDIFF</td><td>返回跨两个指定日期的日期和时间边界数</td><td>SELECT DATEDIFF(YEAR,’1949-10-01’,’2022-10-01’)</td><td>73</td></tr><tr><td>GETDATE</td><td>返回当前系统日期和时间</td><td>SELECT GETDATE()</td><td>‘2022-02-12 13:19:41.890’</td></tr><tr><td>DAY</td><td>返回指定日期中的天的整数</td><td>SELECT DAY(‘2022-01-15’)</td><td>15</td></tr><tr><td>MONTH</td><td>返回指定日期中的月份的整数</td><td>SELECT DAY(‘2022-01-15’)</td><td>1</td></tr><tr><td>YEAR</td><td>返回指定日期中的年份的整数</td><td>SELECT DAY(‘2022-01-15’)</td><td>2022</td></tr></tbody></table><h3 id="转换函数"><a href="#转换函数" class="headerlink" title="转换函数"></a>转换函数</h3><p>​        当遇到类型转换的问题时，可以使用SQL Server所提供的CAST和CONVERT函数。这两种函数不但可以将指定的户籍类型转为另一种数据类型，还可用来获得各种特殊的数据格式。CAST和CONVERT函数都可用于选择列表、WHERE子句和允许使用表达式的任何地方。</p><p>​        在SQL Server中数据类型转换分为两种，分别如下：</p><ul><li><p>隐性转换：SQL Server自动处理某些数据类型的的转换。例如，如果比较char和datetime表达式、smallint和int表达式、或不同长度的char表达式，SQL Server可将它们自动转换，这种转换称为隐性转换，对这些转换不必使用CAST函数。</p></li><li><p>显示转换：显示转换是指CAST和CONVERT函数，CAST和CONVERT函数将数值从一种数据类型（局部变量、列或其他表达式）转换到另一种数据类型。</p></li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> CAST<span class="token punctuation">(</span><span class="token string">'法外狂徒张三'</span> <span class="token keyword">AS</span> nvarchar<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">---结果</span>法外狂徒<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="元数据函数"><a href="#元数据函数" class="headerlink" title="元数据函数"></a>元数据函数</h3><p>​        元数据函数描述了数据的结构和意义，它主要用于返回数据库中的相应信息，其中包括</p><p>返回数据库中数据表或视图的个数和名称。</p><p>返回数据库中数据字段的名称、数据类型、长度等描述信息。</p><p>返回数据库中定义的约束、索引、主键或外键等信息。</p><table><thead><tr><th>函数名称</th><th>说明</th><th>示例</th><th>结果</th></tr></thead><tbody><tr><td>COL_LENGTH</td><td>返回列的定义长度（以字节为单位）</td><td>SELECT COL_LENGTH(‘GraspcwZt’,’fullname’)</td><td>50</td></tr><tr><td>COL_NAME</td><td>返回数据库列的名称，该列具有相应的表标识号和列标识号</td><td>SELECT COL_NAME(OBJECT_ID(‘GraspcwZt’),1)</td><td>order</td></tr><tr><td>DB_NAME</td><td>返回数据库名</td><td>SELECT DB_NAME()</td><td>master</td></tr><tr><td>OBJECT_ID</td><td>返回数据库对象标识号</td><td>SELECT OBJECT_ID(‘GraspcwZt’)</td><td>1435152158</td></tr></tbody></table><h2 id="第八章-视图"><a href="#第八章-视图" class="headerlink" title="第八章 视图"></a>第八章 视图</h2><p>​        视图是一种常用的数据库对象，它将查询的结果以虚表的形式存储在数据中。视图并不在数据库中以存储数据集的形式存在。视图的结构和内容是建立在对表的查询基础之上的，和表一样包括行和列，这些行和列都来源于其所引用的表，并且是在引用视图过程中动态生成的。<br>​        视图中的内容是由查询定义来的，并且试图和查询都是通过SQL语句定义的，它们有着许多相同和不同之处。具体如下：<br>（1）存储：视图存储为数据库设计的一部分，而查询则不是。视图可以禁止所有用户访问数据库中的表，而要求用户只能通过视图操作数据。这种方法可以保护用户和应用程序不受某些数据库修改的影响，同样也可以保护数据表的安全性。<br>（2）排序：可以排序任何查询结果，但是只有当视图包括TOP子句时才能排序视图。<br>（3）加密：可以加密视图，但是不能加密查询。</p><h2 id="第九章-子查询"><a href="#第九章-子查询" class="headerlink" title="第九章 子查询"></a>第九章 子查询</h2><p>​        子查询是一个嵌套在SELECT、INSERT、UPDATE或DELETE语句或其他子查询中的查询。任何允许使用表达式的地方都可以使用子查询。<br>​        嵌套查询是指将一个查询块嵌套在另一个查询块的WHERE子句或HAVING短语的条件中的查询。嵌套查询中上层的查询块称为外侧查询或父查询，下层查询块称为内层查询或子查询。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">---将大于90分的学生查询出来</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> Student<span class="token keyword">WHERE</span> Sno<span class="token operator">=</span>（<span class="token keyword">SELECT</span> Sno <span class="token keyword">FROM</span> SC <span class="token keyword">WHERE</span> Grade<span class="token operator">></span><span class="token number">90</span>）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="第十章-存储过程"><a href="#第十章-存储过程" class="headerlink" title="第十章 存储过程"></a>第十章 存储过程</h2><p>​        存储过程（Stored Procedure）是预编译SQL语句的集合，这些语句存储在一个名称下并作为一个单元来处理。存储过程代替了传统的逐条执行SQL语句的方式。一个存储过程中可包含查询、插入、删除、更新等操作的一系列SQL语句，当这个存储过程被调用执行时，这些操作也会同时执行。<br>​        存储过程与其他编程语言中的过程类似。它可以接受输入参数并以输出参数的格式向调用过程或批处理返回多个值；包含用于在数据库中执行操作（包括调用其他过程）的编程语句；向调用过程或批处理返回状态值，以指明成功或失败（以及失败的原因）。<br>SQL Server中供了3种类型的存储过程。各类型存储过程如下：</p><ul><li><p>用来管理SQL Server和显示有关数据库和用户的信息的存储过程，这些存储过程被称为系统存储过程。</p></li><li><p>用户在SQL Server中通过采用SQL语句创建存储过程，这类存储过程被称为用户自定义存储过程。</p></li><li><p>通过编程语言（例如：C）创建外部例程，并将这个例程在SQL Server中作为存储过程使用，这类存储过程称为扩展存储过程。</p></li></ul><h3 id="存储过程优点"><a href="#存储过程优点" class="headerlink" title="存储过程优点"></a>存储过程优点</h3><p>存储过程的优点表现在以下几个方面：<br>（1）存储过程可以嵌套使用，支持代码重用。<br>（2）存储过程可以接受与使用参数动态执行其中的SQL语句。<br>（3）存储过程比一般的SQL语句执行速度快。存储过程在创建时已经被编译，每次执行时不需要从新编译。而SQL语句每次执行都需要编译。<br>（4）存储过程具有安全特性（例如权限）和所有权链接，以及可以附加到它们的证书。用户可以被授予权限来执行存储过程而不必直接对存储过程中引用的对象具有权限。<br>（5）存储过程允许模块化程序设计。存储过程一旦创建，以后即可在程序中调用任意多次。<br>这可以改进应用程序的可维护性，并允许应用程序统一访问数据库。<br>（6）存储过程可以减少网络通信流量。一个需要数百行SQL语句代码的操作可以通过一条执行过程代码的语句来执行，而不需要在网络中发送数百行代码。<br>（7）存储过程可以强制应用程序的安全性。参数化存储过程有助于保护应用程序不受SQL injection攻击。</p><h3 id="带参数存储过程"><a href="#带参数存储过程" class="headerlink" title="带参数存储过程"></a>带参数存储过程</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> Proc_mj<span class="token comment">---输入长和宽输出面积</span><span class="token variable">@chang</span> <span class="token keyword">int</span><span class="token punctuation">,</span><span class="token variable">@kuan</span> <span class="token keyword">int</span><span class="token punctuation">,</span><span class="token variable">@mianji</span> <span class="token keyword">int</span> OUTPUT<span class="token keyword">AS</span><span class="token keyword">SELECT</span> <span class="token variable">@MIANJI</span><span class="token operator">=</span><span class="token variable">@chang</span><span class="token operator">*</span><span class="token variable">@kuan</span>GO<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">---使用</span><span class="token keyword">DECLARE</span> <span class="token variable">@jisuanmianji</span> <span class="token keyword">int</span><span class="token keyword">exec</span> Proc_mj <span class="token variable">@chang</span><span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token variable">@kuan</span><span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token variable">@mianji</span><span class="token operator">=</span><span class="token variable">@jisuanmianji</span> output<span class="token keyword">SELECT</span> <span class="token variable">@jisuanmianji</span><span class="token comment">---结果</span><span class="token number">12</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="管理存储过程"><a href="#管理存储过程" class="headerlink" title="管理存储过程"></a>管理存储过程</h3><p>1.执行存储过程<br>存储过程创建完成后，可以通过EXECUTE执行，可简写为EXEC。<br>2.查看存储过程<br>1.使用sys.sql_modules 查看存储过程的定义、使用OBJECT_DEFINITION查看存储过程的定义、使用sp_helptext 查看存储过程的定义。<br>3.修改存储过程<br>使用ALTER PROCEDURE语句修存储过程。该语句修改存储过程时不会更改权限，也不影响相关的存储过程或触发器。<br>4.重命名存储过程<br>使用p_rename系统存储过程重新命名存储过程。<br>5.删除存储过程<br>执行DROP PROCEDURE语句删除存储过程。</p><h2 id="第十一章-触发器"><a href="#第十一章-触发器" class="headerlink" title="第十一章 触发器"></a>第十一章 触发器</h2><p><strong>触发器的介绍</strong>        </p><p>​        触发器是一种特殊类型的存储过程，当指定表中的数据发生变化时触发器自动生效。<br>它与表紧密相连，可以看做是表定义的一部分。触发器不能通过名称被直接调用，更不允许设置参数。<br>在SQL Server中一张表可以有多个触发器。用户可以跟据INSERT、UPDATE或DELETE语句对触发器进行设置，也可以对一张表上的特定操作设置多个触发器。触发器可以包含复杂的Transact-SQL语句。不论触发器所进行的操作有多复杂，触发器都只作为一个独立的单元被执行，被看作是一个事务。如果在执行触发器的过程中发生了错误，则整个事务将会自动回滚。</p><p><strong>触发器的种类</strong></p><p>​        SQL Server 包括三种常规类型的触发器：DML触发器、DDL触发器和登录触发器。<br>当数据库中发生数据操作语言（DML）事件时将调用DML触发器。DML事件包括在指定表或视图中修改数据的INSERT语句、UPDATE语句或DELETE语句。DML触发器可以查询其他表，还可以包含复杂的Transact-SQL语句。<br>您可以设计以下类型的DL触发器：<br>​        AFTER触发器、INSTEAD OF触发器、CLR触发器。<br>​        DDL触发器是一种特殊的触发器，它在响应数据定义语言（DDL）语句时触发。它们可以用于在数据库中执行管理任务，例如，审核以及规蓉数据库操作。<br>​        登录触发器将为响应LOGON事件而激发存储过程。与SQL Server实例建立用户会话时将引发此事件。登录触发器将在登录的身份验证阶段完成之后且用户会话实际建立之前激发。<br>可以使用登录触发器来审核和控制服务器会话，例如通过跟踪登录活动、限制SQL Server的登录名或限制特定登录名的会话数。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MSSQL基础_1</title>
      <link href="/2021/12/07/mssql-ji-chu-1/"/>
      <url>/2021/12/07/mssql-ji-chu-1/</url>
      
        <content type="html"><![CDATA[<h2 id="第一章-数据库基础"><a href="#第一章-数据库基础" class="headerlink" title="第一章 数据库基础"></a>第一章 数据库基础</h2><ul><li>名词解释</li></ul><p>关系：二维表<br>元祖：二维表中的一行<br>属性：二维表中的一列<br>域：每个属性取值范围 比如 性别 取值范围(男、女)</p><ul><li>标识符命名规则</li></ul><ol><li><p>标识符的首字符必须是下列字符之一：</p><p>​        统一码（Unicode）2.0标准中所定义的字母，包括拉丁字母a<del>z和A</del>Z，以及来自其他语言的字符。下划线“_”、符号“@”或者数字符号“#”</p></li><li><p>标识符的后续字符可以是以下3种：</p></li></ol><p>​               统一码（Unicode）2.0标准中所定义的字母，包括拉丁字母或其他国家/地区脚本的十进制数字。符号“@”、美元符号“$”、数字符号“#”或下划线“_”</p><ol start="3"><li>标识符不允许是Transact-SQL的保留字</li><li>不允许嵌入空格或者其他特殊字符</li></ol><h2 id="第二章-数据库操作"><a href="#第二章-数据库操作" class="headerlink" title="第二章 数据库操作"></a>第二章 数据库操作</h2><blockquote><p>使用默认数据库存储路径创建</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">/***CREATE DATABASE语法***CREATE DATABASE database_name*/</span><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> mydb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>详细路径创建数据库</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> mydb<span class="token keyword">ON</span> <span class="token keyword">PRIMARY</span><span class="token punctuation">(</span>Name<span class="token operator">=</span>mydb_data<span class="token punctuation">,</span>Filename<span class="token operator">=</span><span class="token string">'C:\mymssql\mydb.mdf'</span><span class="token punctuation">,</span>Maxsize<span class="token operator">=</span>unlimited<span class="token punctuation">,</span>  <span class="token comment">--可省略</span>Filegrowth<span class="token operator">=</span><span class="token number">10</span><span class="token operator">%</span>  <span class="token comment">--可省略</span><span class="token punctuation">)</span>LOG <span class="token keyword">ON</span><span class="token punctuation">(</span>Name<span class="token operator">=</span>mydb_log<span class="token punctuation">,</span>Filename<span class="token operator">=</span><span class="token string">'C:\mymssql\mydb.ldf'</span><span class="token punctuation">,</span>Size<span class="token operator">=</span><span class="token number">3</span>MB<span class="token punctuation">,</span>  <span class="token comment">--可省略</span>MaxSize<span class="token operator">=</span><span class="token number">50</span>MB<span class="token punctuation">,</span>  <span class="token comment">--可省略</span>FileGrowth<span class="token operator">=</span><span class="token number">1</span>  <span class="token comment">--可省略</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>UNLIMITED:指定文件将增长到磁盘充满。<br>在 SQL Server 中，指定为不限制增长的日志文件的最大大小为 2 TB，而数据文件的最大大小为 16 TB。</p><p>FILEGROWTH growth_increment 指定文件的自动增量。 文件的 FILEGROWTH 设置不能超过 MAXSIZE 设置。</p><blockquote><p>增加数据库文件</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">DATABASE</span> mydb<span class="token keyword">ADD</span> <span class="token keyword">FILE</span><span class="token punctuation">(</span>Name<span class="token operator">=</span>mydb<span class="token punctuation">,</span>Filename<span class="token operator">=</span><span class="token string">'C:\mymssql\mydb.ndf'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>删除数据库文件</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">DATABASE</span> mydbREMOVE <span class="token keyword">FILE</span> mydb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>收缩数据库</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DBCC</span> SHRINKDATABASE<span class="token punctuation">(</span>marvel<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>数据库更名</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">USE</span> master<span class="token keyword">exec</span> sp_renamedb <span class="token string">'mydb'</span><span class="token punctuation">,</span><span class="token string">'my_db'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>删除数据库</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">/***DROP DATABASE 语法***DROP DATABASE database_name*/</span><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> mydb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第三章-表与约束"><a href="#第三章-表与约束" class="headerlink" title="第三章 表与约束"></a>第三章 表与约束</h2><blockquote><p>用户数据类型</p></blockquote><p>创建数据类型post char10位字符 不能为空</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">Exec</span> sp_addtype post<span class="token punctuation">,</span><span class="token string">'char(10)'</span><span class="token punctuation">,</span><span class="token string">'NOT NULL'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>创建表</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">/***SQL CREATE TABLE 语法***CREATE TABLE 表名称(列名称1 数据类型,列名称2 数据类型,列名称3 数据类型,....)*/</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> student<span class="token punctuation">(</span>ID <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>Name nvarchar<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>age <span class="token keyword">int</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>修改表某列可以为空</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> student<span class="token keyword">ALTER</span> <span class="token keyword">COLUMN</span> ID <span class="token keyword">int</span> <span class="token boolean">NULL</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h3><ol><li><p>主键约束（Primary  Key）</p><p>列的内容不能重复，且不能为空，代表这条数据</p></li><li><p>唯一约束（Unique）</p><p>列的内容都是唯一的，不能重复</p></li><li><p>默认约束（Default）</p></li><li><p>检查约束（Check）</p></li><li><p>外键约束（Foreign Key）</p></li></ol><blockquote><p>创建 非空主键 约束的表</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> employee<span class="token punctuation">(</span>ID <span class="token keyword">int</span> <span class="token keyword">CONSTRAINT</span> PK_ID <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>Name <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Sex <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Age <span class="token keyword">int</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>修改表某列 添加 主键 约束</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> student<span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> prm_id <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>ID<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>删除表 主键 约束</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> student<span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> prm_id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>创建 唯一约束 的表</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> employee<span class="token punctuation">(</span>ID <span class="token keyword">int</span> <span class="token keyword">CONSTRAINT</span> UQ_ID <span class="token keyword">UNIQUE</span><span class="token punctuation">,</span>Name <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Sex <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Age <span class="token keyword">int</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>修改表某列 添加 唯一 约束</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> employee<span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> Unique_id <span class="token keyword">UNIQUE</span><span class="token punctuation">(</span>ID<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>删除表 唯一约束</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> employee<span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> Unique_id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>创建表 检查 约束</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> employee<span class="token punctuation">(</span>ID <span class="token keyword">int</span><span class="token punctuation">,</span>Name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    Sex <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">CONSTRAINT</span> CK_sex <span class="token keyword">Check</span><span class="token punctuation">(</span>directorsex <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    Age <span class="token keyword">int</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>修改表某列 添加 检查 约束</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> employee<span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> Check_Sex <span class="token keyword">Check</span><span class="token punctuation">(</span>Sex<span class="token operator">=</span><span class="token string">'女'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p> 删除表 检查 约束</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> employee<span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> Check_Sex<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>创建表 默认 约束</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> employee<span class="token punctuation">(</span>ID <span class="token keyword">int</span><span class="token punctuation">,</span>Name <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    Sex <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">CONSTRAINT</span> def_sex <span class="token keyword">Default</span> <span class="token string">'男'</span><span class="token punctuation">,</span>    Age <span class="token keyword">int</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>修改表某列 添加 默认 约束</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> employee<span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> def_sex <span class="token keyword">default</span> <span class="token string">'男'</span> <span class="token keyword">FOR</span> Sex<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p> 已创建表添加 外键 约束</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> student<span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> Fkey_ID<span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>ID<span class="token punctuation">)</span><span class="token keyword">REFERENCES</span> employee<span class="token punctuation">(</span>ID<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>创建表 外键约束</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> Laborage<span class="token punctuation">(</span>ID <span class="token keyword">int</span><span class="token punctuation">,</span>Wage MONEY<span class="token punctuation">,</span><span class="token keyword">CONSTRAINT</span> fkey_id<span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>ID<span class="token punctuation">)</span><span class="token keyword">REFERENCES</span> employee<span class="token punctuation">(</span>ID<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>已存在的表添加新列</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> student<span class="token keyword">ADD</span> Sex <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>已存在的表修改列类型</p></blockquote><pre class="line-numbers language-SQL" data-language="SQL"><code class="language-SQL">ALTER TABLE studentALTER COLUMN Sex char(10)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>已存在的表 删除列</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> student<span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> Sex<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>删除已存在的表</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> student<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="综合实例"><a href="#综合实例" class="headerlink" title="综合实例"></a>综合实例</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">/*需求：1）创建学生数据库StuDB2）班级表：c1abses班级编号：Cid（主键、自增），班级名：Cname（非空）--学生表：Scudencs学号：stuid（主键、自增）学生姓名：stuname（非空，不允许重复），性别：sex（默认：男）年龄：Age（18-22）所在班级编号：ClassId（外键）*/</span><span class="token keyword">USE</span> masterGO<span class="token keyword">if</span> <span class="token keyword">exists</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sysDATABASEs <span class="token keyword">WHERE</span> name<span class="token operator">=</span><span class="token string">'StuDB'</span><span class="token punctuation">)</span><span class="token comment">--判断数据库是否存在</span><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> StuDB <span class="token comment">--若存在，则先删除该数据库</span>GO<span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> StuDBGO<span class="token keyword">USE</span> StuDB <span class="token comment">--把stuDB设置为当前数据库</span>GO<span class="token comment">--—-创建表</span><span class="token comment">--班级表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> classes<span class="token punctuation">(</span>cid <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">identity</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">--班级编号</span>Cname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token comment">--班级名</span><span class="token punctuation">)</span><span class="token comment">--学生表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> Student<span class="token punctuation">(</span>Stuid <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">identity</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">--学生编号</span>Stuname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">unique</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span><span class="token comment">--学生姓名</span>Sex <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">default</span><span class="token punctuation">(</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">--性别</span>Age <span class="token keyword">int</span> <span class="token keyword">check</span><span class="token punctuation">(</span>Age<span class="token operator">>=</span><span class="token number">18</span> <span class="token operator">or</span> Age<span class="token operator">&lt;=</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">--年龄</span>ClassId <span class="token keyword">int</span> <span class="token keyword">references</span> classes<span class="token punctuation">(</span>cid<span class="token punctuation">)</span><span class="token comment">--班级编号</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第四章-表与数据"><a href="#第四章-表与数据" class="headerlink" title="第四章 表与数据"></a>第四章 表与数据</h2><blockquote><p>新增数据</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">/***语法INSERT [INTO] &lt;表名> [列名] VALUES&lt;值列表>*/</span><span class="token comment">---单条数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> classes <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'一（1）班'</span><span class="token punctuation">)</span><span class="token comment">---一次性多条数据</span><span class="token keyword">INSERT</span> Student<span class="token punctuation">(</span>Stuname<span class="token punctuation">,</span>Sex<span class="token punctuation">,</span>Age<span class="token punctuation">,</span>ClassId<span class="token punctuation">)</span><span class="token keyword">SELECT</span> <span class="token string">'张三'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token keyword">SELECT</span> <span class="token string">'李四'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token keyword">SELECT</span> <span class="token string">'王五'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token keyword">SELECT</span> <span class="token string">'赵六'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>更新数据</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">/***语法UPDATE &lt;表名> SET &lt;列名=更新值>[WHERE&lt;更新条件>]*/</span><span class="token keyword">UPDATE</span> Student <span class="token keyword">set</span> sex<span class="token operator">=</span><span class="token string">'女'</span> <span class="token keyword">WHERE</span> stuname<span class="token operator">=</span><span class="token string">'张三'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>删除数据</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">/***语法DELETE FROM &lt;表名> [WHERE 条件表达式]*/</span><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> Student <span class="token keyword">WHERE</span> stuname<span class="token operator">=</span><span class="token string">'张三'</span><span class="token comment">/***语法TRUNCATE TABLE &lt;表名>*/</span><span class="token comment">/*注意：上述语句与没有条件表达式的DELETE语句结果一样，但是执行的速度更快，使用的系统资源和事务日志更少，并且有外键约束的数据表不能使用TRUNCATE TABLE，需要用DELETE来完成。*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第五章-查询"><a href="#第五章-查询" class="headerlink" title="第五章 查询"></a>第五章 查询</h2><blockquote><p>查全部字段（列）</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token operator">&lt;</span>表名<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>查部分字段（列）</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> sid<span class="token punctuation">,</span>stuname <span class="token keyword">FROM</span> students<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>给列设置别名</p></blockquote><ol><li>“原列名 AS 别名”</li><li>“别名=原列名”</li><li>“原列名 别名”</li></ol><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> stuid <span class="token keyword">AS</span> 学号<span class="token punctuation">,</span>姓名<span class="token operator">=</span>stuname<span class="token punctuation">,</span>stusex 性别 <span class="token keyword">FROM</span> stuinfo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>distinct top 关键字</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">---去除重复项</span><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> stuid <span class="token keyword">FROM</span> stuinfo<span class="token comment">---查询前N条记录</span><span class="token keyword">SELECT</span> <span class="token keyword">TOP</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stuinfo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>对查询结果筛选</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">---BETWEEN..AND</span><span class="token comment">---学号在2-4之间的学员信息</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stuinfo <span class="token keyword">WHERE</span> stuid <span class="token operator">BETWEEN</span> <span class="token number">2</span> <span class="token operator">AND</span> <span class="token number">4</span><span class="token comment">---IN 和 NOT IN</span><span class="token comment">---查询stuinfo表 学号为 1 3 5 的学员信息</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stuinfo <span class="token keyword">WHERE</span> stuid <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token comment">---查询stuinfo表 学号不包含 2 3 的学员信息</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stuinfo <span class="token keyword">WHERE</span> stuid <span class="token operator">NOT</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token comment">---AND 和 OR</span><span class="token comment">---查出年龄大于17的所有男生</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stuinfo <span class="token keyword">WHERE</span> stusex<span class="token operator">=</span><span class="token string">'男'</span> <span class="token operator">AND</span> age<span class="token operator">>=</span><span class="token number">17</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stuinfo <span class="token keyword">WHERE</span> stusex<span class="token operator">=</span><span class="token string">'男'</span> <span class="token operator">OR</span> age<span class="token operator">>=</span><span class="token number">17</span><span class="token comment">---LIKE</span><span class="token comment">---查询学生姓名包含 ‘五’ 的记录</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stuinfo <span class="token keyword">WHERE</span> stuname <span class="token operator">LIKE</span> ‘<span class="token operator">%</span>五<span class="token operator">%</span>’<span class="token comment">---ORDER BY排序</span><span class="token comment">---所有学生年龄从大到小显示</span><span class="token comment">---ORDER BY 列名 DESC --降序</span><span class="token comment">---ORDER BY 列名 ASC  --升序</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stuinfo <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> stuage<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>聚合函数</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">SUM 总计<span class="token comment">---查询Java考试成绩的总和</span><span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span> <span class="token keyword">AS</span> Java总和 <span class="token keyword">FROM</span> stumarks <span class="token keyword">WHERE</span> subject<span class="token operator">=</span><span class="token string">'Java'</span>MAX 最大值<span class="token comment">---查询Java考试成绩最高</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span> <span class="token keyword">AS</span> Java总和 <span class="token keyword">FROM</span> stumarks <span class="token keyword">WHERE</span> subject<span class="token operator">=</span><span class="token string">'Java'</span>MIN 最小值<span class="token comment">---查询Java考试成绩最低</span><span class="token keyword">SELECT</span> <span class="token function">MIN</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span> <span class="token keyword">AS</span> Java总和 <span class="token keyword">FROM</span> stumarks <span class="token keyword">WHERE</span> subject<span class="token operator">=</span><span class="token string">'Java'</span><span class="token comment">---AVG 平均值</span><span class="token comment">---查询Java考试成绩的平均值</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span> <span class="token keyword">AS</span> Java总和 <span class="token keyword">FROM</span> stumarks <span class="token keyword">WHERE</span> subject<span class="token operator">=</span><span class="token string">'Java'</span><span class="token comment">---COUNT 计数</span><span class="token comment">---查询Java考试成绩的人数</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span> <span class="token keyword">AS</span> Java总和 <span class="token keyword">FROM</span> stumarks <span class="token keyword">WHERE</span> subject<span class="token operator">=</span><span class="token string">'Java'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>分组查询</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">---GROUP BY  子句</span><span class="token comment">---查出男女平均年龄</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>stuage<span class="token punctuation">)</span><span class="token punctuation">,</span>sex <span class="token keyword">FROM</span> stuinfo <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> SEX<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/11/16/cad2020-ru-men-ji-jiao-cheng-da-meng-kong-jian/"/>
      <url>/2021/11/16/cad2020-ru-men-ji-jiao-cheng-da-meng-kong-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="CAD2020入门级教程-大梦空间"><a href="#CAD2020入门级教程-大梦空间" class="headerlink" title="CAD2020入门级教程_大梦空间"></a>CAD2020入门级教程_大梦空间</h1><p><a href="https://www.bilibili.com/video/BV1Hx411f772">https://www.bilibili.com/video/BV1Hx411f772</a></p><blockquote><p>全局快捷键</p></blockquote><p>OP CAD选项</p><p>Z E 范围缩放：看到所有图</p><p>P 抓手</p><p>F8 正交：只能水平或垂直作图</p><p>F3 对象捕捉：捕捉中点 终点</p><blockquote><p>直线</p></blockquote><p>任意两个点:L  坐标 坐标</p><p>指定长度直线:L  坐标 20</p><blockquote><p>圆</p></blockquote><p>圆-半径:C 坐标 20 空格</p><p>圆-直径:C 坐标 D 20 空格</p><p>圆-相切:C T 坐标 20 空格</p><p><img src="/2021/11/16/cad2020-ru-men-ji-jiao-cheng-da-meng-kong-jian/image-20211116103253562.png" alt="image-20211116103253562"></p><p>已知直径画圆:C 2P 坐标 坐标</p><p><img src="/2021/11/16/cad2020-ru-men-ji-jiao-cheng-da-meng-kong-jian/image-20211116103338991.png" alt="image-20211116103338991"></p><p>三个点确定圆:C 3P  坐标 坐标 坐标</p><p><img src="/2021/11/16/cad2020-ru-men-ji-jiao-cheng-da-meng-kong-jian/image-20211116103427292.png" alt="image-20211116103427292"></p><p>三角形内的圆:圆–相切，相切，相切 坐标 坐标 坐标</p><p>C 3P tan 坐标 tan 坐标 tan 坐标</p><p><img src="/2021/11/16/cad2020-ru-men-ji-jiao-cheng-da-meng-kong-jian/image-20211116103510405.png" alt="image-20211116103510405"></p><blockquote><p>多段线</p></blockquote><p>多段线是联系的直线 可以绘制圆弧</p><p>a 切换到圆弧</p><p>直线圆弧合并为多段线：</p><p>PE M 选中 Y 选中合并</p><p>多段线宽度</p><p>PL 坐标 W(宽度) 20(起点) 20(终点) 坐标/长度 </p><p><img src="/2021/11/16/cad2020-ru-men-ji-jiao-cheng-da-meng-kong-jian/image-20211116110626312.png" alt="image-20211116110626312"> </p><blockquote><p>多边形</p></blockquote><p>POL 边数 内接/外切 半径</p><p>正七边型边长为20:POL 7 E 坐标 20</p><blockquote><p>拉伸</p></blockquote><p>S 对象 基点 方向相对距离</p><blockquote><p>旋转</p></blockquote><p>RO 对象 基点 角度(逆时针)</p><p>有参考线的旋转</p><p>RO 对象 基点 R(参照) 选择原有的两个点 最后点参考线的点 </p><p><img src="/2021/11/16/cad2020-ru-men-ji-jiao-cheng-da-meng-kong-jian/image-20211116115151708.png" alt="image-20211116115151708"></p><blockquote><p>镜像</p></blockquote><p>MI 对象 镜像点两个</p><p><img src="/2021/11/16/cad2020-ru-men-ji-jiao-cheng-da-meng-kong-jian/image-20211116115904653.png" alt="image-20211116115904653"></p><p><img src="/2021/11/16/cad2020-ru-men-ji-jiao-cheng-da-meng-kong-jian/image-20211116120023584.png" alt="image-20211116120023584"></p><blockquote><p>缩放</p></blockquote><p>原来的基础上放大或缩小</p><p>SC 对象 基点 2(2倍)</p><blockquote><p>对齐</p></blockquote><p>将矩形对齐到斜线并缩放</p><p>AL 对象 两个端点两联 Y(缩放)/N(只对齐)</p><p><img src="/2021/11/16/cad2020-ru-men-ji-jiao-cheng-da-meng-kong-jian/image-20211116131415282.png" alt="image-20211116131415282"></p><p><img src="/2021/11/16/cad2020-ru-men-ji-jiao-cheng-da-meng-kong-jian/image-20211116131708417.png" alt="image-20211116131708417"></p><p><img src="/2021/11/16/cad2020-ru-men-ji-jiao-cheng-da-meng-kong-jian/image-20211116131733480.png" alt="image-20211116131733480"></p><blockquote><p>修剪</p></blockquote><p>TR 对象(基线) 对象</p><p>TR 空格 空格 多选修剪</p><p><img src="/2021/11/16/cad2020-ru-men-ji-jiao-cheng-da-meng-kong-jian/image-20211116131936138.png" alt="image-20211116131936138"></p><blockquote><p>延伸</p></blockquote><p><img src="/2021/11/16/cad2020-ru-men-ji-jiao-cheng-da-meng-kong-jian/image-20211116132047354.png" alt="image-20211116132047354"></p><p>EX 对象(基线) 对象</p><p>TR 空格 空格 多选延伸</p><p><img src="/2021/11/16/cad2020-ru-men-ji-jiao-cheng-da-meng-kong-jian/image-20211116132158210.png" alt="image-20211116132158210"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>封装Win7</title>
      <link href="/2021/10/22/feng-zhuang-win7/"/>
      <url>/2021/10/22/feng-zhuang-win7/</url>
      
        <content type="html"><![CDATA[<blockquote><p>封装系统说明</p></blockquote><p>封装自己的Windows7操作系统 以64位为例 32位雷同</p><h3 id="封装前准备"><a href="#封装前准备" class="headerlink" title="封装前准备"></a>封装前准备</h3><ul><li><a href="https://customerconnect.vmware.com/cn/downloads/#all_products">VMware Workstation Pro</a></li><li><a href="https://msdn.itellyou.cn/">MSDN</a></li><li><a href="https://www.wepe.com.cn/">微PE</a></li><li><a href="https://www.itsk.com/">系统补丁(IT天空)</a></li><li><a href="https://dl.3dmgame.com/patch/89066.html">软件游戏运行库(3DM游戏运行库)</a></li><li><a href="https://www.chuyu.me/zh-Hans/">Dism++</a></li><li><a href="https://www.sysceo.com/">封装工具驱动包(系统总裁)</a></li><li>常用软件安装包</li></ul><p>将常用软件安装包 软件游戏运行库 放到U盘</p><h3 id="一-安装VMware虚拟机并安装Windows7系统"><a href="#一-安装VMware虚拟机并安装Windows7系统" class="headerlink" title="一.安装VMware虚拟机并安装Windows7系统"></a>一.安装VMware虚拟机并安装Windows7系统</h3><p>以<strong>管理员身份运行</strong>下载好的VMware安装包</p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_01.png" alt="封装Win7_02"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_02.png" alt="封装Win7_03"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_03.png" alt="封装Win7_04"></p><p>可以取消勾选 <strong>启动是检查产品更新</strong> 和 <strong>加入VMware客户体验提升计划</strong></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_04.png" alt="封装Win7_05"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_05.png" alt="封装Win7_06"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_06.png" alt="封装Win7_07"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_07.png" alt="封装Win7_08"></p><p>以上便安装好了VMware虚拟机了</p><p>接下来 <strong>创建新的虚拟机</strong></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_08.png" alt="封装Win7_09"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_09.png" alt="封装Win7_10"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_10.png" alt="封装Win7_11"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_11.png" alt="封装Win7_11"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_12.png" alt="封装Win7_12"></p><p>建议以单个文件存储</p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_13.png" alt="封装Win7_13"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_14.png" alt="封装Win7_14"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_15.png" alt="封装Win7_15"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_16.png" alt="封装Win7_16"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_17.png" alt="封装Win7_17"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_18.png" alt="封装Win7_18"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_19.png" alt="封装Win7_19"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_20.png" alt="封装Win7_20"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_21.png" alt="封装Win7_21"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_22.png" alt="封装Win7_22"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_23.png" alt="封装Win7_23"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_24.png" alt="封装Win7_24"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_25.png" alt="封装Win7_25"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_26.png" alt="封装Win7_26"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_27.png" alt="封装Win7_27"></p><p>这样进入了OOBE流程</p><p>快捷键 Ctrl+Shift+F3 可以跳过这个 按下后电脑黑屏 并 重启</p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_28.png" alt="封装Win7_27"></p><h3 id="二-调整系统设置"><a href="#二-调整系统设置" class="headerlink" title="二.调整系统设置"></a>二.调整系统设置</h3><h4 id="桌面图标设置"><a href="#桌面图标设置" class="headerlink" title="桌面图标设置"></a>桌面图标设置</h4><p>桌面右击  个性化–更改桌面图标–根据自己喜好勾选</p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_29.png" alt="封装Win7_27"></p><h4 id="关闭-操作中心"><a href="#关闭-操作中心" class="headerlink" title="关闭 操作中心"></a>关闭 操作中心</h4><p>开始–控制面板–系统和安全</p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_30.png" alt="封装Win7_27"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_31.png" alt="封装Win7_27"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_32.png" alt="封装Win7_27"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_33.png" alt="封装Win7_27"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_34.png" alt="封装Win7_27"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_35.png" alt="封装Win7_27"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_36.png" alt="封装Win7_27"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_37.png" alt="封装Win7_27"></p><h4 id="关闭-Windows-Update"><a href="#关闭-Windows-Update" class="headerlink" title="关闭 Windows Update"></a>关闭 Windows Update</h4><p>开始–控制面板–系统和安全–启用或禁用自动更新</p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_38.png" alt="封装Win7_27"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_39.png" alt="封装Win7_27"></p><h4 id="关闭-自动播放"><a href="#关闭-自动播放" class="headerlink" title="关闭 自动播放"></a>关闭 自动播放</h4><p>开始–运行–<strong>gpedit.msc</strong>–确定</p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_40.png" alt="封装Win7_27"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_41.png" alt="封装Win7_27"></p><h4 id="启用管理员"><a href="#启用管理员" class="headerlink" title="启用管理员"></a>启用管理员</h4><p><strong>计算机</strong> 右击 <strong>管理</strong>– <strong>本地用户和组</strong>–<strong>用户</strong> 双击 <strong>Administrator</strong></p><p>将 <strong>账户已禁用</strong> 取消勾选</p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_42.png" alt="封装Win7_27"></p><h3 id="三-封装前部署"><a href="#三-封装前部署" class="headerlink" title="三.封装前部署"></a>三.封装前部署</h3><p>将常用软件安装包复制到U盘 然后在虚拟机打开U盘</p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_43.png" alt="封装Win7_27"></p><p>转移虚拟内存文件 减少空间</p><p><strong>计算机</strong> 右击 属性 <strong>高级系统设置</strong>–高级–性能 <strong>设置</strong>–高级 虚拟内存 <strong>更改</strong></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_44.png" alt="封装Win7_27"></p><p>取消勾选 自动管理所有驱动器的分页文件大小</p><p>选择 <strong>C</strong>盘 单选 <strong>无分页文件</strong> 点 <strong>设置</strong></p><p>选择<strong>D</strong>盘 <strong>系统管理的大小</strong> 点 <strong>设置</strong></p><p>然后 重启电脑</p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_45.png" alt="封装Win7_27"></p><h3 id="四-部署前备份系统"><a href="#四-部署前备份系统" class="headerlink" title="四.部署前备份系统"></a>四.部署前备份系统</h3><p>系统微PE生成PE ISO文件</p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_46.png" alt="封装Win7_27"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_47.png" alt="封装Win7_27"></p><p>将虚拟机的CD/DVD驱动器浏览这个ISO文件 启动虚拟机</p><p>进入Win8PE之后 打开桌面上的Dism++</p><p>选择 <strong>Windows7 旗舰版 x64</strong> <strong>打开会话</strong></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_48.png" alt="封装Win7_27"></p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_49.png" alt="封装Win7_27"></p><h3 id="五-正式封装"><a href="#五-正式封装" class="headerlink" title="五.正式封装"></a>五.正式封装</h3><p>编辑虚拟机设置–CD/DVD 取消勾选 启动时连接 和 已连接</p><p>就可以正常进入系统了</p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_50B.png" alt="封装Win7_27"></p><p>进入C盘根目录下 创建新文件夹 sysprep 该文件夹在部署之后将自动删除</p><p>将驱动解压到sysprep文件夹下</p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_50.png" alt="封装Win7_27"></p><p>为避免驱动总裁安装驱动之后在桌面添加快捷方式</p><p>可以编辑 Drvceo 配置文件</p><p>添加几行参数</p><pre class="line-numbers language-ini" data-language="ini"><code class="language-ini"><span class="token key attr-name">Desktoplnk</span><span class="token punctuation">=</span><span class="token value attr-value">off</span><span class="token key attr-name">Dupdrv</span><span class="token punctuation">=</span><span class="token value attr-value">off</span><span class="token key attr-name">ShowMsgbox</span><span class="token punctuation">=</span><span class="token value attr-value">off</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_51.png" alt="封装Win7_27"></p><p>设置封装软件</p><p>直接进入目标系统 根据自己需要设置</p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_52.png" alt="封装Win7_27"></p><p>添加驱动到部署中执行</p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_53.png" alt="封装Win7_27"></p><p>选择自己喜欢的部署背景 进度条</p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_54.png" alt="封装Win7_27"></p><p>将封装后处理 改为 封装后关闭计算机</p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_55.png" alt="封装Win7_27"></p><h3 id="六-进入PE备份封装"><a href="#六-进入PE备份封装" class="headerlink" title="六.进入PE备份封装"></a>六.进入PE备份封装</h3><p><strong>一定要设置用PE进入系统 千万注意</strong></p><p>编辑虚拟机设置 CD/DVD设置 勾选 启动时连接</p><p><img src="/2021/10/22/feng-zhuang-win7/%E5%B0%81%E8%A3%85Win7_56.png" alt="封装Win7_27"></p><p>进入PE之后 做CGI备份</p>]]></content>
      
      
      
        <tags>
            
            <tag> 系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>拿什么拯救你我的C盘</title>
      <link href="/2021/10/11/na-shi-me-zheng-jiu-ni-wo-de-c-pan/"/>
      <url>/2021/10/11/na-shi-me-zheng-jiu-ni-wo-de-c-pan/</url>
      
        <content type="html"><![CDATA[<h2 id="C盘空间不足变红"><a href="#C盘空间不足变红" class="headerlink" title="C盘空间不足变红"></a>C盘空间不足变红</h2><h3 id="显示系统隐藏文件"><a href="#显示系统隐藏文件" class="headerlink" title="显示系统隐藏文件"></a>显示系统隐藏文件</h3><p><img src="/2021/10/11/na-shi-me-zheng-jiu-ni-wo-de-c-pan/%E6%8B%BF%E4%BB%80%E4%B9%88%E6%8B%AF%E6%95%91%E4%BD%A0%E6%88%91%E7%9A%84C%E7%9B%98001.png" alt="拿什么拯救你我的C盘002"></p><p><img src="/2021/10/11/na-shi-me-zheng-jiu-ni-wo-de-c-pan/%E6%8B%BF%E4%BB%80%E4%B9%88%E6%8B%AF%E6%95%91%E4%BD%A0%E6%88%91%E7%9A%84C%E7%9B%98002.png" alt="拿什么拯救你我的C盘001"></p><h3 id="关闭系统休眠"><a href="#关闭系统休眠" class="headerlink" title="关闭系统休眠"></a>关闭系统休眠</h3><p>打开C盘 按文件大小排序 如有文件名为 hiberfil.sys</p><p>该文件大小 N GB</p><p>这是系统休眠功能文件 </p><blockquote><p>关闭命令</p></blockquote><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">powercfg <span class="token operator">/</span>H OFF<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">powercfg <span class="token operator">/</span>HIBERNATE OFF<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>打开命令</p></blockquote><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">powercfg <span class="token operator">/</span>H ON<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">powercfg &#x2F;HIBERNATE ON<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>关闭后该文件自动删除</p><h3 id="转移虚拟内存"><a href="#转移虚拟内存" class="headerlink" title="转移虚拟内存"></a>转移虚拟内存</h3><p>控制面板 –&gt; 系统</p><p>高级系统设置 –&gt; <strong>高级</strong> 选项卡–&gt; 设置</p><p><img src="/2021/10/11/na-shi-me-zheng-jiu-ni-wo-de-c-pan/%E6%8B%BF%E4%BB%80%E4%B9%88%E6%8B%AF%E6%95%91%E4%BD%A0%E6%88%91%E7%9A%84C%E7%9B%98003.png"></p><p>高级 –&gt; 更改</p><p>选择C盘 –&gt; 无分页文件 –&gt; 设置</p><p>选择其他空间充足的分区 –&gt; 系统管理的大小 –&gt; 设置</p><p>重启电脑后生效</p><p><img src="/2021/10/11/na-shi-me-zheng-jiu-ni-wo-de-c-pan/%E6%8B%BF%E4%BB%80%E4%B9%88%E6%8B%AF%E6%95%91%E4%BD%A0%E6%88%91%E7%9A%84C%E7%9B%98004.png"></p><h3 id="手工检查"><a href="#手工检查" class="headerlink" title="手工检查"></a>手工检查</h3><p>[spacesniffer官网]<a href="http://www.uderzo.it/main_products/space_sniffer/">http://www.uderzo.it/main_products/space_sniffer/</a></p><p>下载后解压</p><p><img src="/2021/10/11/na-shi-me-zheng-jiu-ni-wo-de-c-pan/%E6%8B%BF%E4%BB%80%E4%B9%88%E6%8B%AF%E6%95%91%E4%BD%A0%E6%88%91%E7%9A%84C%E7%9B%98005.png" alt="拿什么拯救你我的C盘005"></p><p><strong>以管理员身份运行</strong></p><p>选择扫描C盘</p><p><img src="/2021/10/11/na-shi-me-zheng-jiu-ni-wo-de-c-pan/%E6%8B%BF%E4%BB%80%E4%B9%88%E6%8B%AF%E6%95%91%E4%BD%A0%E6%88%91%E7%9A%84C%E7%9B%98006.png" alt="拿什么拯救你我的C盘006"></p><p>等待扫描结果</p><p><img src="/2021/10/11/na-shi-me-zheng-jiu-ni-wo-de-c-pan/%E6%8B%BF%E4%BB%80%E4%B9%88%E6%8B%AF%E6%95%91%E4%BD%A0%E6%88%91%E7%9A%84C%E7%9B%98007.png" alt="拿什么拯救你我的C盘007"></p>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>皮皮虾插眼视频下载</title>
      <link href="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/"/>
      <url>/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/</url>
      
        <content type="html"><![CDATA[<blockquote><p>皮皮虾有插眼视频的功能,有时候看到需要下载的视频我先插眼然后用抓包软件在安装模拟器中浏览一遍,在浏览过程中抓包软件会分页下载视频列表(JSON文件)</p><p>然后根据视频列表用Python下载</p></blockquote><h2 id="抓包软件Fiddler4配置"><a href="#抓包软件Fiddler4配置" class="headerlink" title="抓包软件Fiddler4配置"></a>抓包软件Fiddler4配置</h2><p><a href="https://www.telerik.com/download/fiddler">Fiddler下载地址 官网</a></p><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_01.png"></p><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_02.png" alt="皮皮虾插眼视频下载_02"></p><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_03.png" alt="皮皮虾插眼视频下载_03"></p><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_04.png" alt="皮皮虾插眼视频下载_04"></p><h2 id="查看本机局域网IP"><a href="#查看本机局域网IP" class="headerlink" title="查看本机局域网IP"></a>查看本机局域网IP</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">ipconfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_05.png"></p><p>比如本机得到的是<strong>192.168.0.112</strong></p><h2 id="夜神模拟器配置"><a href="#夜神模拟器配置" class="headerlink" title="夜神模拟器配置"></a>夜神模拟器配置</h2><p>PS:<strong>注意模拟器运行的Android版本最好是5.1可以使用多开器,开一个5.1的版本</strong></p><ol><li>打开模拟器的<strong>设置</strong>–&gt;找到<strong>WLAN</strong></li></ol><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_06.png"></p><ol start="2"><li>长按虚拟wifi–&gt;<strong>修改网络</strong></li></ol><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_07.png" alt="皮皮虾插眼视频下载_07"></p><ol start="3"><li>勾选<strong>高级选项</strong>–&gt;将代理改为<strong>手动</strong>–&gt;IP地址输入刚刚得到的IP–&gt;端口输入<strong>8888</strong></li></ol><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_08.png" alt="皮皮虾插眼视频下载_08"></p><ol start="4"><li><p>打开模拟器的默认浏览器输入网址<strong>IP:8888</strong>,比如192.168.0.112:8888</p><p>然后点FiddlerRoot certificate 下载根证书</p></li></ol><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_09.png" alt="皮皮虾插眼视频下载_09"></p><ol start="5"><li>安装根证书随意输入名称并设置模拟器的密码</li></ol><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_10.png" alt="皮皮虾插眼视频下载_10"></p><ol start="6"><li>使用模拟器打开<a href="http://www.baidu.com试试,现在抓包软件可以看到访问了baidu的网站/">www.baidu.com试试,现在抓包软件可以看到访问了baidu的网站</a></li></ol><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_11.png" alt="皮皮虾插眼视频下载_11"></p><h2 id="皮皮虾APP浏览插眼内容"><a href="#皮皮虾APP浏览插眼内容" class="headerlink" title="皮皮虾APP浏览插眼内容"></a>皮皮虾APP浏览插眼内容</h2><ol><li>下载皮皮虾APP</li><li>登陆皮皮虾</li><li>向下滑动插眼内容</li></ol><p>使用URL排序</p><p>/bds/ward/list?layout_style=…….</p><p>这样的JSON文件都是下载的临时视频列表</p><p>选中这些文件然后右击保存到文件夹</p><p><strong>jsonfiles</strong>  与  Python文件在同一个目录下</p><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_13.png"></p><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_14.png"></p><p>然后运行 ppxeye.py 程序 自动下载</p><h2 id="Python源码"><a href="#Python源码" class="headerlink" title="Python源码"></a>Python源码</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">'''下载插眼视频https://i.snssdk.com/bds/ward/list/?layout_style=1&amp;cursor=1586475848202&amp;feed_count=17&amp;list_type=userwards&amp;user_id=61617304127&amp;direction=2&amp;iid=158778771379645&amp;device_id=1952320808301352&amp;ac=wifi&amp;channel=tengxun&amp;aid=1319&amp;app_name=super&amp;version_code=345&amp;version_name=3.4.5&amp;device_platform=android&amp;ssmix=a&amp;device_type=SM-G973N&amp;device_brand=samsung&amp;language=zh&amp;os_api=22&amp;os_version=5.1.1&amp;uuid=351564155372295&amp;openudid=c41d1926c38f3dca&amp;manifest_version_code=345&amp;resolution=720*1280&amp;dpi=240&amp;update_version_code=34550&amp;_rticket=1621843950952&amp;cdid=9713b490-0abc-4638-bbe6-c1c8a6d04e28&amp;app_region=CN&amp;last_channel&amp;sys_region=CN&amp;time_zone=Asia%2FShanghai&amp;app_language=ZH&amp;carrier_region=CN&amp;last_update_version_code=0&amp;ts=1621843950'''</span><span class="token keyword">import</span> requests<span class="token punctuation">,</span>json<span class="token punctuation">,</span>os<span class="token keyword">from</span> jsonpath <span class="token keyword">import</span> jsonpath<span class="token keyword">def</span> <span class="token function">ppxvideodownload</span><span class="token punctuation">(</span>foldername<span class="token punctuation">,</span>videoid<span class="token punctuation">,</span>name<span class="token punctuation">,</span>content<span class="token punctuation">,</span>dlurl<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    皮皮虾视频下载    :param foldername: 目录    :param videoid: 视频ID    :param name: 作者    :param content: 标题    :param dlurl: 下载地址    :return:    """</span>    filename<span class="token operator">=</span>name<span class="token operator">+</span><span class="token string">"_"</span><span class="token operator">+</span>videoid<span class="token operator">+</span><span class="token string">"_"</span><span class="token operator">+</span>content    <span class="token keyword">print</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>    req<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>dlurl<span class="token punctuation">)</span>    <span class="token comment"># 打印标题</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>foldername <span class="token operator">+</span> <span class="token string">"\\"</span> <span class="token operator">+</span> filename <span class="token operator">+</span> <span class="token string">'.mp4'</span><span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>req<span class="token punctuation">.</span>content<span class="token punctuation">)</span>        f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"标题有特殊字符"</span><span class="token punctuation">)</span>        filename <span class="token operator">=</span> name <span class="token operator">+</span> <span class="token string">"_"</span> <span class="token operator">+</span> videoid        <span class="token keyword">print</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>        f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>foldername <span class="token operator">+</span> <span class="token string">"\\"</span> <span class="token operator">+</span> filename <span class="token operator">+</span> <span class="token string">'.mp4'</span><span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>req<span class="token punctuation">.</span>content<span class="token punctuation">)</span>        f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">deljson</span><span class="token punctuation">(</span>item_ancestor_id<span class="token punctuation">,</span>item_name<span class="token punctuation">,</span>item_content<span class="token punctuation">,</span>item_type<span class="token punctuation">,</span>item_videourl<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    格式化json将不是视频类型的删除元素    :param item_ancestor_id:    :param item_name:    :param item_content:    :param item_type:    :param item_videourl:    :return:    '''</span>    i<span class="token operator">=</span><span class="token number">0</span>    <span class="token keyword">while</span> i<span class="token operator">&lt;</span><span class="token builtin">len</span><span class="token punctuation">(</span>item_type<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> item_type<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'第&#123;'</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'&#125;个要删除'</span><span class="token punctuation">)</span>            item_name<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>i<span class="token punctuation">)</span>            item_ancestor_id<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>i<span class="token punctuation">)</span>            item_type<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>i<span class="token punctuation">)</span>            item_content<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>i<span class="token punctuation">)</span>        i<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span>    <span class="token keyword">if</span> <span class="token boolean">None</span> <span class="token keyword">in</span> item_ancestor_id<span class="token punctuation">:</span>        deljson<span class="token punctuation">(</span>item_ancestor_id<span class="token punctuation">,</span>item_name<span class="token punctuation">,</span>item_content<span class="token punctuation">,</span>item_type<span class="token punctuation">,</span>item_videourl<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        pathname <span class="token operator">=</span> <span class="token string">'eye'</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>pathname<span class="token punctuation">)</span><span class="token punctuation">:</span>            os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>pathname<span class="token punctuation">)</span>        x <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> videoid <span class="token keyword">in</span> item_ancestor_id<span class="token punctuation">:</span>            ppxvideodownload<span class="token punctuation">(</span>pathname<span class="token punctuation">,</span> item_ancestor_id<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">,</span>item_name<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">,</span> item_content<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">,</span> item_videourl<span class="token punctuation">[</span>x <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            x <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token keyword">def</span> <span class="token function">decojsonfile</span><span class="token punctuation">(</span>jsonfilename<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    解析JSON文件并且将下载参数传给ppxvideodown    :param jsonfilename: json文件名称    :return:    '''</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>jsonfilename<span class="token punctuation">)</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>jsonfilename<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        filedata <span class="token operator">=</span> json<span class="token punctuation">.</span>load<span class="token punctuation">(</span>f<span class="token punctuation">)</span>    <span class="token comment">#获得作者</span>    item_name<span class="token operator">=</span>jsonpath<span class="token punctuation">(</span>filedata<span class="token punctuation">,</span><span class="token string">"$.data.data.*.item.author.name"</span><span class="token punctuation">)</span>    <span class="token comment">#获得视频ID</span>    item_ancestor_id<span class="token operator">=</span>jsonpath<span class="token punctuation">(</span>filedata<span class="token punctuation">,</span><span class="token string">"$.data.data.*.item.ancestor_id"</span><span class="token punctuation">)</span>    <span class="token comment">#获得视频ID</span>    item_type<span class="token operator">=</span>jsonpath<span class="token punctuation">(</span>filedata<span class="token punctuation">,</span><span class="token string">"$.data.data.*.item.item_type"</span><span class="token punctuation">)</span>    <span class="token comment">#获得视频标题</span>    item_content<span class="token operator">=</span>jsonpath<span class="token punctuation">(</span>filedata<span class="token punctuation">,</span><span class="token string">"$.data.data.*.item.content"</span><span class="token punctuation">)</span>    <span class="token comment">#获得视频下载地址</span>    item_videourl<span class="token operator">=</span>jsonpath<span class="token punctuation">(</span>filedata<span class="token punctuation">,</span><span class="token string">"$.data.data.*.item.origin_video_download.url_list.*.url"</span><span class="token punctuation">)</span>    deljson<span class="token punctuation">(</span>item_ancestor_id<span class="token punctuation">,</span>item_name<span class="token punctuation">,</span>item_content<span class="token punctuation">,</span>item_type<span class="token punctuation">,</span>item_videourl<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    jsonfiles<span class="token operator">=</span>os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span><span class="token string">'jsonfiles'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> jsonfile <span class="token keyword">in</span> jsonfiles<span class="token punctuation">:</span>        decojsonfile<span class="token punctuation">(</span><span class="token string">'jsonfiles\\'</span><span class="token operator">+</span>jsonfile<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行效果</p><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_15.png"></p><p>在同样的目录 eye 目录下就是下载的视频了</p><p>视频的命名规则是</p><p>作者_视频ID_标题</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 皮皮虾 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python爬取简书文章为MD文件</title>
      <link href="/2021/09/06/python-pa-qu-jian-shu-wen-zhang-wei-md-wen-jian/"/>
      <url>/2021/09/06/python-pa-qu-jian-shu-wen-zhang-wei-md-wen-jian/</url>
      
        <content type="html"><![CDATA[<h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><pre><code>简书的文章需要放到自己的博客里</code></pre><p>保存图片并且将文字内容写到XX.MD文件</p><p>人生苦短,我用Python</p><h2 id="Python实现"><a href="#Python实现" class="headerlink" title="Python实现"></a>Python实现</h2><pre><code>URL=皮皮虾视频的分享链接然后做个拼接就可以使用了</code></pre><p>需要用到的包有</p><ul><li>re(自带)</li><li>os(自带)</li><li>time(自带)</li><li>requests(初次安装 <strong>pip install requests</strong>)</li></ul><p>用request.get()爬取到HTML源码然后存在本地</p><p>然后当文本文件逐行读取</p><p>符合规则就写入到MD文件中</p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">'''简书转为Markdown文件方便转为博客文件并下载图片文件2021-9-6'''</span><span class="token keyword">import</span>  requests<span class="token punctuation">,</span>re<span class="token punctuation">,</span>os<span class="token punctuation">,</span>time<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">def</span> <span class="token function">jianshutomd</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token comment">#url='https://www.jianshu.com/p/cf65f7eb14e2'</span>      headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'Accept'</span><span class="token punctuation">:</span> <span class="token string">'*/*'</span><span class="token punctuation">,</span>            <span class="token string">'Accept-Language'</span><span class="token punctuation">:</span> <span class="token string">'en-US,en;q=0.5'</span><span class="token punctuation">,</span>            <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36'</span><span class="token punctuation">&#125;</span>      req <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>      html<span class="token operator">=</span>req<span class="token punctuation">.</span>text      soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token string">'lxml'</span><span class="token punctuation">)</span>      <span class="token comment">#获得网页标题</span>      htmltitle<span class="token operator">=</span>soup<span class="token punctuation">.</span>title<span class="token punctuation">.</span>text      <span class="token comment">#将网页标题的空格替换成-</span>      htmltitle<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span>htmltitle<span class="token punctuation">,</span><span class="token string">' '</span><span class="token punctuation">,</span><span class="token string">'-'</span><span class="token punctuation">)</span>      htmltitle<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span>htmltitle<span class="token punctuation">,</span><span class="token string">'---简书'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span>      htmltitle<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span>htmltitle<span class="token punctuation">,</span><span class="token string">'/'</span><span class="token punctuation">,</span><span class="token string">'-'</span><span class="token punctuation">)</span>      <span class="token keyword">print</span><span class="token punctuation">(</span>htmltitle<span class="token punctuation">)</span>      <span class="token comment">#按照网页标题创建文件夹</span>      <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>htmltitle<span class="token punctuation">)</span><span class="token punctuation">:</span>            os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>htmltitle<span class="token punctuation">)</span>      <span class="token comment">#将网页保存为HTML文件</span>      <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>htmltitle<span class="token operator">+</span><span class="token string">'.html'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>html<span class="token punctuation">)</span>      mdtext<span class="token operator">=</span><span class="token string">"---\ntitle: "</span><span class="token operator">+</span>htmltitle<span class="token operator">+</span><span class="token string">"\ncategories: 类别\ndate: "</span><span class="token operator">+</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"\n---\n"</span>      f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>htmltitle<span class="token operator">+</span><span class="token string">'.html'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>      lines <span class="token operator">=</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">for</span> line <span class="token keyword">in</span> lines<span class="token punctuation">:</span>            <span class="token comment">#print(line)</span>            <span class="token keyword">if</span> line<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'&lt;p>'</span> <span class="token keyword">or</span> line<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'&lt;/div>&lt;p>'</span><span class="token punctuation">:</span>                  mdtext<span class="token operator">+=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'&lt;p>(.*?)&lt;/p>'</span><span class="token punctuation">,</span>line<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">'\n'</span>            <span class="token keyword">if</span> line<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'&lt;div class="image-view" '</span><span class="token punctuation">:</span>                  mdtext <span class="token operator">+=</span> <span class="token string">'![]('</span><span class="token operator">+</span>htmltitle<span class="token operator">+</span><span class="token string">'/'</span> <span class="token operator">+</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'upload_images/(.*?)"'</span><span class="token punctuation">,</span> line<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span> <span class="token string">')\n'</span>                  pngname<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'upload_images/(.*?)"'</span><span class="token punctuation">,</span> line<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>                  geturl<span class="token operator">=</span><span class="token string">'http:'</span><span class="token operator">+</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'-src="(.*?)"'</span><span class="token punctuation">,</span> line<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>                  <span class="token keyword">print</span><span class="token punctuation">(</span>geturl<span class="token punctuation">)</span>                  <span class="token keyword">print</span><span class="token punctuation">(</span>pngname<span class="token punctuation">)</span>                  req<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>geturl<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>                  f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>htmltitle<span class="token operator">+</span><span class="token string">'/'</span><span class="token operator">+</span>pngname<span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span>                  f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>req<span class="token punctuation">.</span>content<span class="token punctuation">)</span>                  f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>htmltitle<span class="token operator">+</span><span class="token string">'.md'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>mdtext<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>      <span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>            url<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入文章URL地址:"</span><span class="token punctuation">)</span>            jianshutomd<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决博客图片不显示问题-博客补充</title>
      <link href="/2021/08/31/jie-jue-bo-ke-tu-pian-bu-xian-shi-wen-ti-bo-ke-bu-chong/"/>
      <url>/2021/08/31/jie-jue-bo-ke-tu-pian-bu-xian-shi-wen-ti-bo-ke-bu-chong/</url>
      
        <content type="html"><![CDATA[<p>写博客时适当的添加图片是很有效率的一种做法，也会让别人更容易明白你想表达的意思。</p><p>如果你的博客也是通过<code>Hexo</code>框架建立的，在使用初期你可能也遇到过和我相似的问题：在一个<code>.md</code>文件中添加的图片并没有在预览中显示出来，下面分享一种解决此问题的方法：</p><ol><li>修改博客配置。</li><li>下载插件。</li></ol><h2 id="修改博客配置"><a href="#修改博客配置" class="headerlink" title="修改博客配置"></a>修改博客配置</h2><p>修改博客根目录中<code>_config.yml</code>文件的配置项<code>post_asset_folder</code>为<code>true</code>：</p><pre class="line-numbers language-none"><code class="language-none">post_asset_folder: true<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>完成此设置后，当你通过<code>hexo new 文件名</code>新建博客后，会产生一个和文件同名的文件夹。</p><h2 id="下载插件"><a href="#下载插件" class="headerlink" title="下载插件"></a>下载插件</h2><p>在博客根目录中下使用npm安装插件：</p><pre class="line-numbers language-none"><code class="language-none">npm install https:&#x2F;&#x2F;github.com&#x2F;CodeFalling&#x2F;hexo-asset-image --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>当文章需要添加图片时，将需要添加的图片放入同名的文件夹中，同时通过相对路径索引到该图片。</p>]]></content>
      
      
      <categories>
          
          <category> 极客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gitee-Hexo搭建免费的博客</title>
      <link href="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/"/>
      <url>/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/</url>
      
        <content type="html"><![CDATA[<p>使用Gitee+Hexo搭建免费的博客</p><h2 id="1-下载并安装Node-JS"><a href="#1-下载并安装Node-JS" class="headerlink" title="1. 下载并安装Node.JS"></a>1. 下载并安装Node.JS</h2><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_01.png"></p><p>检查安装是否正确</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">node <span class="token operator">-</span>v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">npm <span class="token operator">-</span>v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_02.png"></p><h2 id="2-下载安装Git"><a href="#2-下载安装Git" class="headerlink" title="2.下载安装Git"></a>2.下载安装Git</h2><p><a href="https://git-scm.com/">Git官网</a></p><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_03.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_04.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_05.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_06.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_07.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_08.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_09.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_10.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_11.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_12.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_13.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_14.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_15.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_16.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_17.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_18.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_19.png"></p><pre class="line-numbers language-none"><code class="language-none">git --version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_20.png"></p><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_22.png"></p><h2 id="3-安装淘宝的cnpm-管理器"><a href="#3-安装淘宝的cnpm-管理器" class="headerlink" title="3.  安装淘宝的cnpm 管理器"></a>3.  安装淘宝的cnpm 管理器</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">npm install <span class="token operator">-</span>g cnpm <span class="token operator">--</span>registry=http:<span class="token operator">/</span><span class="token operator">/</span>registry<span class="token punctuation">.</span>npm<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_23.png"></p><h2 id="4-安装Hexo"><a href="#4-安装Hexo" class="headerlink" title="4. 安装Hexo"></a>4. 安装Hexo</h2><p>#安装hexo框架</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">cnpm install <span class="token operator">-</span>g hexo<span class="token operator">-</span><span class="token function">cli</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_24.png"></p><p>#查看hexo版本</p><pre class="line-numbers language-none"><code class="language-none">hexo -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_25.png"></p><p>#创建blog目录</p><pre class="line-numbers language-none"><code class="language-none">mkdir blog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>#进入目录</p><pre class="line-numbers language-none"><code class="language-none">cd blog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>#生成博客 初始化博客</p><pre class="line-numbers language-none"><code class="language-none">sudo hexo inithexo init<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>#启动本地博客服务</p><pre class="line-numbers language-none"><code class="language-none">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> #创建新的文章 </p><pre class="line-numbers language-none"><code class="language-none">hexo n &quot;新文章&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_26.png"></p><p>更改文章之后</p><p>#返回blog目录</p><p>#清理</p><pre class="line-numbers language-none"><code class="language-none">hexo clean<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>#生成</p><pre class="line-numbers language-none"><code class="language-none">hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5-部署到Gitee"><a href="#5-部署到Gitee" class="headerlink" title="5. 部署到Gitee"></a>5. 部署到Gitee</h2><p><a href="https://gitee.com/">Gitee官网</a></p><ol><li>注册Gitee</li></ol><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/Gitee-Hexo%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E7%9A%84%E5%8D%9A%E5%AE%A2_01.png"></p><ol start="2"><li>新建仓库</li></ol><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/Gitee-Hexo%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E7%9A%84%E5%8D%9A%E5%AE%A2_02.png"></p><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/Gitee-Hexo%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E7%9A%84%E5%8D%9A%E5%AE%A2_03.png"></p><ol start="3"><li>添加仓库公钥</li></ol><p>进入blog目录文件夹右击 打开Git Bash Here</p><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_21.png"></p><pre class="line-numbers language-none"><code class="language-none">git config --global user.name &quot;yourname&quot;git config --global user.email &quot;youremail&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Gitee 提供了基于SSH协议的Git服务，在使用SSH协议访问仓库之前，需要先配置好账户/仓库的SSH公钥。</p><p>你可以按如下命令来生成 sshkey:</p><pre class="line-numbers language-none"><code class="language-none">ssh-keygen -t ed25519 -C &quot;xxxxx@xxxxx.com&quot;  # Generating public&#x2F;private ed25519 key pair...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>注意：这里的 <code>xxxxx@xxxxx.com</code> 只是生成的 sshkey 的名称，并不约束或要求具体命名为某个邮箱。<br>现网的大部分教程均讲解的使用邮箱生成，其一开始的初衷仅仅是为了便于辨识所以使用了邮箱。</p></blockquote><p>按照提示完成三次回车，即可生成 ssh key。通过查看 <code>~/.ssh/id_ed25519.pub</code> 文件内容，获取到你的 public key</p><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/Gitee-Hexo%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E7%9A%84%E5%8D%9A%E5%AE%A2_05.png"></p><p>复制生成后的 ssh key，通过仓库主页 <strong>「管理」-&gt;「部署公钥管理」-&gt;「添加部署公钥」</strong> ，添加生成的 public key 添加到仓库中。</p><p><img src="https://images.gitee.com/uploads/images/2018/0814/233212_29a62378_551147.png" alt="添加部署公钥"></p><p>Windows用这个：npm install hexo-deployer-git –save</p><p>添加后，在终端（Terminal）中输入</p><pre class="line-numbers language-none"><code class="language-none">ssh -T git@gitee.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>首次使用需要确认并添加主机到本机SSH可信列表。若返回 <code>Hi XXX! You&#39;ve successfully authenticated, but Gitee.com does not provide shell access.</code> 内容，则证明添加成功。</p><p><img src="https://images.gitee.com/uploads/images/2018/0814/170837_4c5ef029_551147.png" alt="SSH添加提示"></p><p>添加成功后，就可以使用SSH协议对仓库进行操作了。</p><ol start="4"><li>在blog目录下安装git部署插件</li></ol><pre class="line-numbers language-none"><code class="language-none">cnpm install --save hexo-deployer-git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="5"><li>配置_config.yml </li></ol><pre class="line-numbers language-none"><code class="language-none"># Deployment## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.htmldeploy: type: gitrepo: https:&#x2F;&#x2F;gitee.com&#x2F;jzgjp6&#x2F;jzgjp6.git branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="6"><li>上传到云端</li></ol><pre class="line-numbers language-none"><code class="language-none">hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 极客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gitee </tag>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github-Hexo搭建个人博客</title>
      <link href="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/"/>
      <url>/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/</url>
      
        <content type="html"><![CDATA[<p>使用GitHub+Hexo搭建免费的博客</p><h2 id="1-下载并安装Node-JS"><a href="#1-下载并安装Node-JS" class="headerlink" title="1. 下载并安装Node.JS"></a>1. 下载并安装Node.JS</h2><p><a href="https://nodejs.org/zh-cn/">Node.js官网</a></p><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_01.png"></p><p>检查安装是否正确</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">node <span class="token operator">-</span>v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">npm <span class="token operator">-</span>v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_02.png"></p><h2 id="2-下载安装Git"><a href="#2-下载安装Git" class="headerlink" title="2.下载安装Git"></a>2.下载安装Git</h2><p><a href="https://git-scm.com/">Git官网</a></p><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_03.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_04.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_05.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_06.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_07.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_08.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_09.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_10.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_11.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_12.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_13.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_14.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_15.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_16.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_17.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_18.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_19.png"></p><pre class="line-numbers language-none"><code class="language-none">git --version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_20.png"></p><p>进入blog目录文件夹右击 打开Git Bash Here</p><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_21.png"></p><pre class="line-numbers language-none"><code class="language-none">git config --global user.name &quot;yourname&quot;git config --global user.email &quot;youremail&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_22.png"></p><h2 id="3-安装淘宝的cnpm-管理器"><a href="#3-安装淘宝的cnpm-管理器" class="headerlink" title="3.  安装淘宝的cnpm 管理器"></a>3.  安装淘宝的cnpm 管理器</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">npm install <span class="token operator">-</span>g cnpm <span class="token operator">--</span>registry=http:<span class="token operator">/</span><span class="token operator">/</span>registry<span class="token punctuation">.</span>npm<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_23.png"></p><h2 id="4-安装Hexo"><a href="#4-安装Hexo" class="headerlink" title="4. 安装Hexo"></a>4. 安装Hexo</h2><p>#安装hexo框架</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">cnpm install <span class="token operator">-</span>g hexo<span class="token operator">-</span><span class="token function">cli</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_24.png"></p><p>#查看hexo版本</p><pre class="line-numbers language-none"><code class="language-none">hexo -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_25.png"></p><p>#创建blog目录</p><pre class="line-numbers language-none"><code class="language-none">mkdir blog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>#进入目录</p><pre class="line-numbers language-none"><code class="language-none">cd blog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>#生成博客 初始化博客</p><pre class="line-numbers language-none"><code class="language-none">sudo hexo inithexo init<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>#启动本地博客服务</p><pre class="line-numbers language-none"><code class="language-none">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> #创建新的文章 </p><pre class="line-numbers language-none"><code class="language-none">hexo n &quot;新文章&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_26.png"></p><p>更改文章之后</p><p>#返回blog目录</p><p>#清理</p><pre class="line-numbers language-none"><code class="language-none">hexo clean<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>#生成</p><pre class="line-numbers language-none"><code class="language-none">hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5-部署到Github"><a href="#5-部署到Github" class="headerlink" title="5. 部署到Github"></a>5. 部署到Github</h2><p><a href="https://github.com/">Github官网</a></p><p>登录Github</p><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_27.png"></p><p>Windows用这个：npm install hexo-deployer-git –save</p><p>#在blog目录下安装git部署插件</p><pre class="line-numbers language-none"><code class="language-none">cnpm install --save hexo-deployer-git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>#配置_config.yml </p><pre class="line-numbers language-none"><code class="language-none"># Deployment## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.htmldeploy: type: gitrepo: https:&#x2F;&#x2F;github.com&#x2F;YourGithubName&#x2F;YourGithubName.github.io.git branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>#生成Git公钥</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">ssh<span class="token operator">-</span>keygen <span class="token operator">-</span>t rsa <span class="token operator">-</span>C “yourusername@xxx<span class="token punctuation">.</span>com”<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_30.png"></p><p>#用记事本打开用户目录/.ssh/id_rsa.pub文件 并复制所有内容</p><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_31.png"></p><p>#Github添加公钥</p><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_33.png"></p><p>#粘贴刚刚复制的内容</p><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_34.png"></p><p>#上传到云端</p><pre class="line-numbers language-none"><code class="language-none">hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 极客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬取B站指定UP主视频列表</title>
      <link href="/2021/07/29/pa-qu-b-zhan-zhi-ding-up-zhu-shi-pin-lie-biao/"/>
      <url>/2021/07/29/pa-qu-b-zhan-zhi-ding-up-zhu-shi-pin-lie-biao/</url>
      
        <content type="html"><![CDATA[<h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><p>​    平常在家看看电影,电视剧,最近剧荒了,在B站看到<a href="https://space.bilibili.com/927587/video?tid=0&page=38&keyword=&order=pubdate"><strong>木鱼水心</strong></a>的一些视频电影解说,他推荐了一些电影和电视剧</p><p>但是他发布的视频太多了 有999个视频以上,一个个去看太累了,重复的事情就交给电脑吧！</p><p><img src="/2021/07/29/pa-qu-b-zhan-zhi-ding-up-zhu-shi-pin-lie-biao/%E7%88%AC%E5%8F%96B%E7%AB%99%E6%8C%87%E5%AE%9AUP%E4%B8%BB%E8%A7%86%E9%A2%91%E5%88%97%E8%A1%A8_01.png"></p><p>有的一部分我看过了比如《肖生克的救赎》《阿甘正传》等等,他推荐的视频很多,我怎么得到这些视频列表呢？</p><p>人生苦短,我用Python</p><h2 id="Python实现"><a href="#Python实现" class="headerlink" title="Python实现"></a>Python实现</h2><p>​    URL=皮皮虾视频的分享链接然后做个拼接就可以使用了</p><p>需要用到的包有</p><ul><li>re(自带)</li><li>json(自带)</li><li>requests(初次安装 <strong>pip install requests</strong>)</li><li>jsonpath(初次安装 <strong>pip install jsonpath</strong>)</li></ul><p>由于不是全部视频都是电影解说 视频标题中带有“木鱼微剧场”关键字的是我需要</p><p>将视频标题取得 然后 做个判断 符合条件就保存到文本文件中</p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re<span class="token punctuation">,</span>requests<span class="token punctuation">,</span>json<span class="token keyword">from</span> jsonpath <span class="token keyword">import</span> jsonpath<span class="token keyword">def</span> <span class="token function">envideolisttitles</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token triple-quoted-string string">'''   解析B站指定UP主的视频列表标题   :param url:视频列表   :return:   '''</span>   headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'Accept'</span><span class="token punctuation">:</span> <span class="token string">'*/*'</span><span class="token punctuation">,</span>      <span class="token string">'Accept-Language'</span><span class="token punctuation">:</span> <span class="token string">'en-US,en;q=0.5'</span><span class="token punctuation">,</span>      <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36'</span><span class="token punctuation">&#125;</span>   req <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>   filedata<span class="token operator">=</span>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>req<span class="token punctuation">.</span>text<span class="token punctuation">)</span>   item_name<span class="token operator">=</span>jsonpath<span class="token punctuation">(</span>filedata<span class="token punctuation">,</span><span class="token string">"$.data.list.vlist.*.title"</span><span class="token punctuation">)</span>   <span class="token keyword">for</span> it <span class="token keyword">in</span> item_name<span class="token punctuation">:</span>      <span class="token keyword">if</span> it<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">"木鱼微剧场"</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>         <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'muyushuixin.txt'</span><span class="token punctuation">,</span><span class="token string">'a+'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            f<span class="token punctuation">.</span>writelines<span class="token punctuation">(</span>it<span class="token operator">+</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>   <span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">38</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      url<span class="token operator">=</span><span class="token string">'https://api.bilibili.com/x/space/arc/search?mid=927587&amp;ps=30&amp;tid=0&amp;pn='</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'&amp;keyword=&amp;order=pubdate&amp;jsonp=jsonp'</span>      <span class="token keyword">print</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>      envideolisttitles<span class="token punctuation">(</span>url<span class="token punctuation">)</span>```<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> B站 </tag>
            
            <tag> bilibili </tag>
            
            <tag> 哔哩哔哩 </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> 视频 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>皮皮虾视频下载线上解析版</title>
      <link href="/2020/10/06/pi-pi-xia-shi-pin-xia-zai-xian-shang-jie-xi-ban/"/>
      <url>/2020/10/06/pi-pi-xia-shi-pin-xia-zai-xian-shang-jie-xi-ban/</url>
      
        <content type="html"><![CDATA[<h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><p>​    皮皮虾无水印下载视频,偶然间发现这个网站</p><p><a href="https://docs.tenapi.cn/ppx.html#%E8%AF%B7%E6%B1%82url">皮皮虾无水印解析</a></p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header-name keyword">http:</span>//tenapi.cn/ppx/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>请求示例</p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header-name keyword">https:</span>//tenapi.cn/ppx/?url=https://h5.pipix.com/s/hukXsy/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>返回数据</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"code"</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>  <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"标题交给你们了。"</span><span class="token punctuation">,</span>  <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"https://p1-ppx.byteimg.com/img/mosaic-legacy/2ab8400068ec7576befea~272x480_q80.jpeg"</span><span class="token punctuation">,</span>  <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://v3-ppx.ixigua.com/5ed98deb58c533527e24ec0220a28992/5f62eec8/video/tos/hxsy/tos-hxsy-ve-0076/41064fc495f04f029e8629421b1352fd/?a=1319&amp;br=1041&amp;bt=347&amp;cr=0&amp;cs=0&amp;dr=3&amp;ds=1&amp;er=&amp;l=2020091712060301001404314826001048&amp;lr=&amp;mime_type=video_mp4&amp;qs=0&amp;rc=anl4PGd0bDl4bjMzZGYzM0ApZGk1NTRpNjs5N2k4NDxnZGctYGsucWdjNDVfLS0yMS9zczMxLV82XjA0NDA0XzMuY2I6Yw%3D%3D&amp;vl=&amp;vr="</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Python实现"><a href="#Python实现" class="headerlink" title="Python实现"></a>Python实现</h2><p>​    URL=皮皮虾视频的分享链接然后做个拼接就可以使用了</p><p>需要用到的包有</p><ul><li>re(自带)</li><li>json(自带)</li><li>requests(初次安装 <strong>pip install requests</strong>)</li></ul><p>为了避免重复下载 我将每个皮皮虾的原始ID和标题作为视频的文件名</p><blockquote><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re<span class="token punctuation">,</span>requests<span class="token punctuation">,</span>json<span class="token triple-quoted-string string">'''皮皮虾无水印下载--解析版本2020-10-06'''</span><span class="token keyword">def</span> <span class="token function">ppxdownloadmp4</span><span class="token punctuation">(</span>ppx_url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment">#ppx_url='https://h5.pipix.com/s/JyeSQ73/'</span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>ppx_url<span class="token punctuation">)</span>    <span class="token comment"># 得到跳转真实URL</span>    jempurl <span class="token operator">=</span> response<span class="token punctuation">.</span>url    <span class="token comment"># 得到视频ID</span>    <span class="token builtin">id</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'https://h5.pipix.com/item/(.*?)\?app_id'</span><span class="token punctuation">,</span> jempurl<span class="token punctuation">)</span>    <span class="token comment">#解析网址</span>    req<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://tenapi.cn/ppx/?url='</span><span class="token operator">+</span>ppx_url<span class="token punctuation">)</span>    html<span class="token operator">=</span>req<span class="token punctuation">.</span>text    <span class="token comment"># print(req)</span>    <span class="token comment"># print(html)</span>    <span class="token comment">#解析JSON</span>    jg<span class="token operator">=</span>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>html<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"无法获得视频ID"</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>jg<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"无法打印标题"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>jg<span class="token punctuation">[</span><span class="token string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    response<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>jg<span class="token punctuation">[</span><span class="token string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    f<span class="token operator">=</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">'_'</span><span class="token operator">+</span>jg<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">'.mp4'</span><span class="token punctuation">,</span><span class="token string">'wb'</span><span class="token punctuation">)</span>    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>response<span class="token punctuation">.</span>content<span class="token punctuation">)</span>    f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            ppx_url <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'输入分享网址：'</span><span class="token punctuation">)</span>            ppxdownloadmp4<span class="token punctuation">(</span>ppx_url<span class="token punctuation">)</span>        <span class="token keyword">except</span> KeyError<span class="token punctuation">:</span>            <span class="token keyword">pass</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>皮皮虾版本： </p><p><img src="/2020/10/06/pi-pi-xia-shi-pin-xia-zai-xian-shang-jie-xi-ban/%E7%9A%AE%E7%9A%AE%E8%99%BE%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E7%BA%BF%E4%B8%8A%E8%A7%A3%E6%9E%90%E7%89%88_01.jpg"></p><ol><li>找到需要下载的视频点 <strong>分享</strong> 按钮</li></ol><p><img src="/2020/10/06/pi-pi-xia-shi-pin-xia-zai-xian-shang-jie-xi-ban/%E7%9A%AE%E7%9A%AE%E8%99%BE%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E7%BA%BF%E4%B8%8A%E8%A7%A3%E6%9E%90%E7%89%88_02.png"></p><ol start="2"><li>选择 <strong>复制链接</strong></li></ol><p><img src="/2020/10/06/pi-pi-xia-shi-pin-xia-zai-xian-shang-jie-xi-ban/%E7%9A%AE%E7%9A%AE%E8%99%BE%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E7%BA%BF%E4%B8%8A%E8%A7%A3%E6%9E%90%E7%89%88_03.png"></p><ol start="3"><li>在运行的ppx.py 中粘贴刚刚的地址 回车 将打印该视频的ID 和 标题 如果标题有特殊表情则打印失败</li></ol><p><img src="/2020/10/06/pi-pi-xia-shi-pin-xia-zai-xian-shang-jie-xi-ban/%E7%9A%AE%E7%9A%AE%E8%99%BE%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E7%BA%BF%E4%B8%8A%E8%A7%A3%E6%9E%90%E7%89%88_04.png"></p><ol start="4"><li>最终效果</li></ol><p><img src="/2020/10/06/pi-pi-xia-shi-pin-xia-zai-xian-shang-jie-xi-ban/%E7%9A%AE%E7%9A%AE%E8%99%BE%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E7%BA%BF%E4%B8%8A%E8%A7%A3%E6%9E%90%E7%89%88_05.png"></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
            <tag> 视频 </tag>
            
            <tag> 皮皮虾 </tag>
            
            <tag> 视频解析 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>

<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>皮皮虾插眼视频下载</title>
      <link href="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/"/>
      <url>/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/</url>
      
        <content type="html"><![CDATA[<blockquote><p>皮皮虾有插眼视频的功能,有时候看到需要下载的视频我先插眼然后用抓包软件在安装模拟器中浏览一遍,在浏览过程中抓包软件会分页下载视频列表(JSON文件)</p><p>然后根据视频列表用Python下载</p></blockquote><h2 id="抓包软件Fiddler4配置"><a href="#抓包软件Fiddler4配置" class="headerlink" title="抓包软件Fiddler4配置"></a>抓包软件Fiddler4配置</h2><p><a href="https://www.telerik.com/download/fiddler">Fiddler下载地址 官网</a></p><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_01.png"></p><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_02.png" alt="皮皮虾插眼视频下载_02"></p><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_03.png" alt="皮皮虾插眼视频下载_03"></p><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_04.png" alt="皮皮虾插眼视频下载_04"></p><h2 id="查看本机局域网IP"><a href="#查看本机局域网IP" class="headerlink" title="查看本机局域网IP"></a>查看本机局域网IP</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">ipconfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_05.png"></p><p>比如本机得到的是<strong>192.168.0.112</strong></p><h2 id="夜神模拟器配置"><a href="#夜神模拟器配置" class="headerlink" title="夜神模拟器配置"></a>夜神模拟器配置</h2><p>PS:<strong>注意模拟器运行的Android版本最好是5.1可以使用多开器,开一个5.1的版本</strong></p><ol><li>打开模拟器的<strong>设置</strong>–&gt;找到<strong>WLAN</strong></li></ol><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_06.png"></p><ol start="2"><li>长按虚拟wifi–&gt;<strong>修改网络</strong></li></ol><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_07.png" alt="皮皮虾插眼视频下载_07"></p><ol start="3"><li>勾选<strong>高级选项</strong>–&gt;将代理改为<strong>手动</strong>–&gt;IP地址输入刚刚得到的IP–&gt;端口输入<strong>8888</strong></li></ol><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_08.png" alt="皮皮虾插眼视频下载_08"></p><ol start="4"><li><p>打开模拟器的默认浏览器输入网址<strong>IP:8888</strong>,比如192.168.0.112:8888</p><p>然后点FiddlerRoot certificate 下载根证书</p></li></ol><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_09.png" alt="皮皮虾插眼视频下载_09"></p><ol start="5"><li>安装根证书随意输入名称并设置模拟器的密码</li></ol><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_10.png" alt="皮皮虾插眼视频下载_10"></p><ol start="6"><li>使用模拟器打开<a href="http://www.baidu.com试试,现在抓包软件可以看到访问了baidu的网站/">www.baidu.com试试,现在抓包软件可以看到访问了baidu的网站</a></li></ol><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_11.png" alt="皮皮虾插眼视频下载_11"></p><h2 id="皮皮虾APP浏览插眼内容"><a href="#皮皮虾APP浏览插眼内容" class="headerlink" title="皮皮虾APP浏览插眼内容"></a>皮皮虾APP浏览插眼内容</h2><ol><li>下载皮皮虾APP</li><li>登陆皮皮虾</li><li>向下滑动插眼内容</li></ol><p>使用URL排序</p><p>/bds/ward/list?layout_style=…….</p><p>这样的JSON文件都是下载的临时视频列表</p><p>选中这些文件然后右击保存到文件夹</p><p><strong>jsonfiles</strong>  与  Python文件在同一个目录下</p><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_13.png"></p><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_14.png"></p><p>然后运行 ppxeye.py 程序 自动下载</p><h2 id="Python源码"><a href="#Python源码" class="headerlink" title="Python源码"></a>Python源码</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">'''下载插眼视频https://i.snssdk.com/bds/ward/list/?layout_style=1&amp;cursor=1586475848202&amp;feed_count=17&amp;list_type=userwards&amp;user_id=61617304127&amp;direction=2&amp;iid=158778771379645&amp;device_id=1952320808301352&amp;ac=wifi&amp;channel=tengxun&amp;aid=1319&amp;app_name=super&amp;version_code=345&amp;version_name=3.4.5&amp;device_platform=android&amp;ssmix=a&amp;device_type=SM-G973N&amp;device_brand=samsung&amp;language=zh&amp;os_api=22&amp;os_version=5.1.1&amp;uuid=351564155372295&amp;openudid=c41d1926c38f3dca&amp;manifest_version_code=345&amp;resolution=720*1280&amp;dpi=240&amp;update_version_code=34550&amp;_rticket=1621843950952&amp;cdid=9713b490-0abc-4638-bbe6-c1c8a6d04e28&amp;app_region=CN&amp;last_channel&amp;sys_region=CN&amp;time_zone=Asia%2FShanghai&amp;app_language=ZH&amp;carrier_region=CN&amp;last_update_version_code=0&amp;ts=1621843950'''</span><span class="token keyword">import</span> requests<span class="token punctuation">,</span>json<span class="token punctuation">,</span>os<span class="token keyword">from</span> jsonpath <span class="token keyword">import</span> jsonpath<span class="token keyword">def</span> <span class="token function">ppxvideodownload</span><span class="token punctuation">(</span>foldername<span class="token punctuation">,</span>videoid<span class="token punctuation">,</span>name<span class="token punctuation">,</span>content<span class="token punctuation">,</span>dlurl<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    皮皮虾视频下载    :param foldername: 目录    :param videoid: 视频ID    :param name: 作者    :param content: 标题    :param dlurl: 下载地址    :return:    """</span>    filename<span class="token operator">=</span>name<span class="token operator">+</span><span class="token string">"_"</span><span class="token operator">+</span>videoid<span class="token operator">+</span><span class="token string">"_"</span><span class="token operator">+</span>content    <span class="token keyword">print</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>    req<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>dlurl<span class="token punctuation">)</span>    <span class="token comment"># 打印标题</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>foldername <span class="token operator">+</span> <span class="token string">"\\"</span> <span class="token operator">+</span> filename <span class="token operator">+</span> <span class="token string">'.mp4'</span><span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>req<span class="token punctuation">.</span>content<span class="token punctuation">)</span>        f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"标题有特殊字符"</span><span class="token punctuation">)</span>        filename <span class="token operator">=</span> name <span class="token operator">+</span> <span class="token string">"_"</span> <span class="token operator">+</span> videoid        <span class="token keyword">print</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>        f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>foldername <span class="token operator">+</span> <span class="token string">"\\"</span> <span class="token operator">+</span> filename <span class="token operator">+</span> <span class="token string">'.mp4'</span><span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>req<span class="token punctuation">.</span>content<span class="token punctuation">)</span>        f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">deljson</span><span class="token punctuation">(</span>item_ancestor_id<span class="token punctuation">,</span>item_name<span class="token punctuation">,</span>item_content<span class="token punctuation">,</span>item_type<span class="token punctuation">,</span>item_videourl<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    格式化json将不是视频类型的删除元素    :param item_ancestor_id:    :param item_name:    :param item_content:    :param item_type:    :param item_videourl:    :return:    '''</span>    i<span class="token operator">=</span><span class="token number">0</span>    <span class="token keyword">while</span> i<span class="token operator">&lt;</span><span class="token builtin">len</span><span class="token punctuation">(</span>item_type<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> item_type<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'第&#123;'</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'&#125;个要删除'</span><span class="token punctuation">)</span>            item_name<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>i<span class="token punctuation">)</span>            item_ancestor_id<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>i<span class="token punctuation">)</span>            item_type<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>i<span class="token punctuation">)</span>            item_content<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>i<span class="token punctuation">)</span>        i<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span>    <span class="token keyword">if</span> <span class="token boolean">None</span> <span class="token keyword">in</span> item_ancestor_id<span class="token punctuation">:</span>        deljson<span class="token punctuation">(</span>item_ancestor_id<span class="token punctuation">,</span>item_name<span class="token punctuation">,</span>item_content<span class="token punctuation">,</span>item_type<span class="token punctuation">,</span>item_videourl<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        pathname <span class="token operator">=</span> <span class="token string">'eye'</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>pathname<span class="token punctuation">)</span><span class="token punctuation">:</span>            os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>pathname<span class="token punctuation">)</span>        x <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> videoid <span class="token keyword">in</span> item_ancestor_id<span class="token punctuation">:</span>            ppxvideodownload<span class="token punctuation">(</span>pathname<span class="token punctuation">,</span> item_ancestor_id<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">,</span>item_name<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">,</span> item_content<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">,</span> item_videourl<span class="token punctuation">[</span>x <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            x <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token keyword">def</span> <span class="token function">decojsonfile</span><span class="token punctuation">(</span>jsonfilename<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    解析JSON文件并且将下载参数传给ppxvideodown    :param jsonfilename: json文件名称    :return:    '''</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>jsonfilename<span class="token punctuation">)</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>jsonfilename<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        filedata <span class="token operator">=</span> json<span class="token punctuation">.</span>load<span class="token punctuation">(</span>f<span class="token punctuation">)</span>    <span class="token comment">#获得作者</span>    item_name<span class="token operator">=</span>jsonpath<span class="token punctuation">(</span>filedata<span class="token punctuation">,</span><span class="token string">"$.data.data.*.item.author.name"</span><span class="token punctuation">)</span>    <span class="token comment">#获得视频ID</span>    item_ancestor_id<span class="token operator">=</span>jsonpath<span class="token punctuation">(</span>filedata<span class="token punctuation">,</span><span class="token string">"$.data.data.*.item.ancestor_id"</span><span class="token punctuation">)</span>    <span class="token comment">#获得视频ID</span>    item_type<span class="token operator">=</span>jsonpath<span class="token punctuation">(</span>filedata<span class="token punctuation">,</span><span class="token string">"$.data.data.*.item.item_type"</span><span class="token punctuation">)</span>    <span class="token comment">#获得视频标题</span>    item_content<span class="token operator">=</span>jsonpath<span class="token punctuation">(</span>filedata<span class="token punctuation">,</span><span class="token string">"$.data.data.*.item.content"</span><span class="token punctuation">)</span>    <span class="token comment">#获得视频下载地址</span>    item_videourl<span class="token operator">=</span>jsonpath<span class="token punctuation">(</span>filedata<span class="token punctuation">,</span><span class="token string">"$.data.data.*.item.origin_video_download.url_list.*.url"</span><span class="token punctuation">)</span>    deljson<span class="token punctuation">(</span>item_ancestor_id<span class="token punctuation">,</span>item_name<span class="token punctuation">,</span>item_content<span class="token punctuation">,</span>item_type<span class="token punctuation">,</span>item_videourl<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    jsonfiles<span class="token operator">=</span>os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span><span class="token string">'jsonfiles'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> jsonfile <span class="token keyword">in</span> jsonfiles<span class="token punctuation">:</span>        decojsonfile<span class="token punctuation">(</span><span class="token string">'jsonfiles\\'</span><span class="token operator">+</span>jsonfile<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行效果</p><p><img src="/2021/09/23/pi-pi-xia-cha-yan-shi-pin-xia-zai/%E7%9A%AE%E7%9A%AE%E8%99%BE%E6%8F%92%E7%9C%BC%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD_15.png"></p><p>在同样的目录 eye 目录下就是下载的视频了</p><p>视频的命名规则是</p><p>作者_视频ID_标题</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 皮皮虾 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python爬取简书文章为MD文件</title>
      <link href="/2021/09/06/python-pa-qu-jian-shu-wen-zhang-wei-md-wen-jian/"/>
      <url>/2021/09/06/python-pa-qu-jian-shu-wen-zhang-wei-md-wen-jian/</url>
      
        <content type="html"><![CDATA[<h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><pre><code>简书的文章需要放到自己的博客里</code></pre><p>保存图片并且将文字内容写到XX.MD文件</p><p>人生苦短,我用Python</p><h2 id="Python实现"><a href="#Python实现" class="headerlink" title="Python实现"></a>Python实现</h2><pre><code>URL=皮皮虾视频的分享链接然后做个拼接就可以使用了</code></pre><p>需要用到的包有</p><ul><li>re(自带)</li><li>os(自带)</li><li>time(自带)</li><li>requests(初次安装 <strong>pip install requests</strong>)</li></ul><p>用request.get()爬取到HTML源码然后存在本地</p><p>然后当文本文件逐行读取</p><p>符合规则就写入到MD文件中</p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">'''简书转为Markdown文件方便转为博客文件并下载图片文件2021-9-6'''</span><span class="token keyword">import</span>  requests<span class="token punctuation">,</span>re<span class="token punctuation">,</span>os<span class="token punctuation">,</span>time<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">def</span> <span class="token function">jianshutomd</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token comment">#url='https://www.jianshu.com/p/cf65f7eb14e2'</span>      headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'Accept'</span><span class="token punctuation">:</span> <span class="token string">'*/*'</span><span class="token punctuation">,</span>            <span class="token string">'Accept-Language'</span><span class="token punctuation">:</span> <span class="token string">'en-US,en;q=0.5'</span><span class="token punctuation">,</span>            <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36'</span><span class="token punctuation">&#125;</span>      req <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>      html<span class="token operator">=</span>req<span class="token punctuation">.</span>text      soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token string">'lxml'</span><span class="token punctuation">)</span>      <span class="token comment">#获得网页标题</span>      htmltitle<span class="token operator">=</span>soup<span class="token punctuation">.</span>title<span class="token punctuation">.</span>text      <span class="token comment">#将网页标题的空格替换成-</span>      htmltitle<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span>htmltitle<span class="token punctuation">,</span><span class="token string">' '</span><span class="token punctuation">,</span><span class="token string">'-'</span><span class="token punctuation">)</span>      htmltitle<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span>htmltitle<span class="token punctuation">,</span><span class="token string">'---简书'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span>      htmltitle<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span>htmltitle<span class="token punctuation">,</span><span class="token string">'/'</span><span class="token punctuation">,</span><span class="token string">'-'</span><span class="token punctuation">)</span>      <span class="token keyword">print</span><span class="token punctuation">(</span>htmltitle<span class="token punctuation">)</span>      <span class="token comment">#按照网页标题创建文件夹</span>      <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>htmltitle<span class="token punctuation">)</span><span class="token punctuation">:</span>            os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>htmltitle<span class="token punctuation">)</span>      <span class="token comment">#将网页保存为HTML文件</span>      <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>htmltitle<span class="token operator">+</span><span class="token string">'.html'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>html<span class="token punctuation">)</span>      mdtext<span class="token operator">=</span><span class="token string">"---\ntitle: "</span><span class="token operator">+</span>htmltitle<span class="token operator">+</span><span class="token string">"\ncategories: 类别\ndate: "</span><span class="token operator">+</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"\n---\n"</span>      f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>htmltitle<span class="token operator">+</span><span class="token string">'.html'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>      lines <span class="token operator">=</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">for</span> line <span class="token keyword">in</span> lines<span class="token punctuation">:</span>            <span class="token comment">#print(line)</span>            <span class="token keyword">if</span> line<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'&lt;p>'</span> <span class="token keyword">or</span> line<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'&lt;/div>&lt;p>'</span><span class="token punctuation">:</span>                  mdtext<span class="token operator">+=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'&lt;p>(.*?)&lt;/p>'</span><span class="token punctuation">,</span>line<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">'\n'</span>            <span class="token keyword">if</span> line<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'&lt;div class="image-view" '</span><span class="token punctuation">:</span>                  mdtext <span class="token operator">+=</span> <span class="token string">'![]('</span><span class="token operator">+</span>htmltitle<span class="token operator">+</span><span class="token string">'/'</span> <span class="token operator">+</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'upload_images/(.*?)"'</span><span class="token punctuation">,</span> line<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span> <span class="token string">')\n'</span>                  pngname<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'upload_images/(.*?)"'</span><span class="token punctuation">,</span> line<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>                  geturl<span class="token operator">=</span><span class="token string">'http:'</span><span class="token operator">+</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'-src="(.*?)"'</span><span class="token punctuation">,</span> line<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>                  <span class="token keyword">print</span><span class="token punctuation">(</span>geturl<span class="token punctuation">)</span>                  <span class="token keyword">print</span><span class="token punctuation">(</span>pngname<span class="token punctuation">)</span>                  req<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>geturl<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>                  f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>htmltitle<span class="token operator">+</span><span class="token string">'/'</span><span class="token operator">+</span>pngname<span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span>                  f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>req<span class="token punctuation">.</span>content<span class="token punctuation">)</span>                  f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>htmltitle<span class="token operator">+</span><span class="token string">'.md'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>mdtext<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>      <span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>            url<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入文章URL地址:"</span><span class="token punctuation">)</span>            jianshutomd<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决博客图片不显示问题-博客补充</title>
      <link href="/2021/08/31/jie-jue-bo-ke-tu-pian-bu-xian-shi-wen-ti-bo-ke-bu-chong/"/>
      <url>/2021/08/31/jie-jue-bo-ke-tu-pian-bu-xian-shi-wen-ti-bo-ke-bu-chong/</url>
      
        <content type="html"><![CDATA[<p>写博客时适当的添加图片是很有效率的一种做法，也会让别人更容易明白你想表达的意思。</p><p>如果你的博客也是通过<code>Hexo</code>框架建立的，在使用初期你可能也遇到过和我相似的问题：在一个<code>.md</code>文件中添加的图片并没有在预览中显示出来，下面分享一种解决此问题的方法：</p><ol><li>修改博客配置。</li><li>下载插件。</li></ol><h2 id="修改博客配置"><a href="#修改博客配置" class="headerlink" title="修改博客配置"></a>修改博客配置</h2><p>修改博客根目录中<code>_config.yml</code>文件的配置项<code>post_asset_folder</code>为<code>true</code>：</p><pre class="line-numbers language-none"><code class="language-none">post_asset_folder: true<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>完成此设置后，当你通过<code>hexo new 文件名</code>新建博客后，会产生一个和文件同名的文件夹。</p><h2 id="下载插件"><a href="#下载插件" class="headerlink" title="下载插件"></a>下载插件</h2><p>在博客根目录中下使用npm安装插件：</p><pre class="line-numbers language-none"><code class="language-none">npm install https:&#x2F;&#x2F;github.com&#x2F;CodeFalling&#x2F;hexo-asset-image --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>当文章需要添加图片时，将需要添加的图片放入同名的文件夹中，同时通过相对路径索引到该图片。</p>]]></content>
      
      
      <categories>
          
          <category> 极客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github-Hexo搭建个人博客</title>
      <link href="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/"/>
      <url>/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/</url>
      
        <content type="html"><![CDATA[<p>使用GitHub+Hexo搭建免费的博客</p><h2 id="1-下载并安装Node-JS"><a href="#1-下载并安装Node-JS" class="headerlink" title="1. 下载并安装Node.JS"></a>1. 下载并安装Node.JS</h2><p><a href="https://nodejs.org/zh-cn/">Node.js官网</a></p><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_01.png"></p><p>检查安装是否正确</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">node <span class="token operator">-</span>v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">npm <span class="token operator">-</span>v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_02.png"></p><h2 id="2-下载安装Git"><a href="#2-下载安装Git" class="headerlink" title="2.下载安装Git"></a>2.下载安装Git</h2><p><a href="https://git-scm.com/">Git官网</a></p><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_03.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_04.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_05.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_06.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_07.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_08.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_09.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_10.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_11.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_12.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_13.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_14.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_15.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_16.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_17.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_18.png"><br><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_19.png"></p><pre class="line-numbers language-none"><code class="language-none">git --version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_20.png"></p><p>进入blog目录文件夹右击 打开Git Bash Here</p><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_21.png"></p><pre class="line-numbers language-none"><code class="language-none">git config --global user.name &quot;yourname&quot;git config --global user.email &quot;youremail&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_22.png"></p><h2 id="3-安装淘宝的cnpm-管理器"><a href="#3-安装淘宝的cnpm-管理器" class="headerlink" title="3.  安装淘宝的cnpm 管理器"></a>3.  安装淘宝的cnpm 管理器</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">npm install <span class="token operator">-</span>g cnpm <span class="token operator">--</span>registry=http:<span class="token operator">/</span><span class="token operator">/</span>registry<span class="token punctuation">.</span>npm<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_23.png"></p><h2 id="4-安装Hexo"><a href="#4-安装Hexo" class="headerlink" title="4. 安装Hexo"></a>4. 安装Hexo</h2><p>#安装hexo框架</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">cnpm install <span class="token operator">-</span>g hexo<span class="token operator">-</span><span class="token function">cli</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_24.png"></p><p>#查看hexo版本</p><pre class="line-numbers language-none"><code class="language-none">hexo -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_25.png"></p><p>#创建blog目录</p><pre class="line-numbers language-none"><code class="language-none">mkdir blog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>#进入目录</p><pre class="line-numbers language-none"><code class="language-none">cd blog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>#生成博客 初始化博客</p><pre class="line-numbers language-none"><code class="language-none">sudo hexo inithexo init<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>#启动本地博客服务</p><pre class="line-numbers language-none"><code class="language-none">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> #创建新的文章 </p><pre class="line-numbers language-none"><code class="language-none">hexo n &quot;新文章&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_26.png"></p><p>更改文章之后</p><p>#返回blog目录</p><p>#清理</p><pre class="line-numbers language-none"><code class="language-none">hexo clean<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>#生成</p><pre class="line-numbers language-none"><code class="language-none">hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5-部署到Github"><a href="#5-部署到Github" class="headerlink" title="5. 部署到Github"></a>5. 部署到Github</h2><p><a href="https://github.com/">Github官网</a></p><p>登录Github</p><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_27.png"></p><p>Windows用这个：npm install hexo-deployer-git –save</p><p>#在blog目录下安装git部署插件</p><pre class="line-numbers language-none"><code class="language-none">cnpm install --save hexo-deployer-git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>#配置_config.yml </p><pre class="line-numbers language-none"><code class="language-none"># Deployment## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.htmldeploy: type: gitrepo: https:&#x2F;&#x2F;github.com&#x2F;YourGithubName&#x2F;YourGithubName.github.io.git branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>#生成Git公钥</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">ssh<span class="token operator">-</span>keygen <span class="token operator">-</span>t rsa <span class="token operator">-</span>C “yourusername@xxx<span class="token punctuation">.</span>com”<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_30.png"></p><p>#用记事本打开用户目录/.ssh/id_rsa.pub文件 并复制所有内容</p><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_31.png"></p><p>#Github添加公钥</p><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_33.png"></p><p>#粘贴刚刚复制的内容</p><p><img src="/2021/08/27/github-hexo-da-jian-ge-ren-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_34.png"></p><p>#上传到云端</p><pre class="line-numbers language-none"><code class="language-none">hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 极客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gitee-Hexo搭建免费的博客</title>
      <link href="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/"/>
      <url>/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/</url>
      
        <content type="html"><![CDATA[<p>使用Gitee+Hexo搭建免费的博客</p><h2 id="1-下载并安装Node-JS"><a href="#1-下载并安装Node-JS" class="headerlink" title="1. 下载并安装Node.JS"></a>1. 下载并安装Node.JS</h2><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_01.png"></p><p>检查安装是否正确</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">node <span class="token operator">-</span>v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">npm <span class="token operator">-</span>v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_02.png"></p><h2 id="2-下载安装Git"><a href="#2-下载安装Git" class="headerlink" title="2.下载安装Git"></a>2.下载安装Git</h2><p><a href="https://git-scm.com/">Git官网</a></p><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_03.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_04.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_05.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_06.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_07.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_08.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_09.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_10.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_11.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_12.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_13.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_14.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_15.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_16.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_17.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_18.png"><br><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_19.png"></p><pre class="line-numbers language-none"><code class="language-none">git --version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_20.png"></p><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_22.png"></p><h2 id="3-安装淘宝的cnpm-管理器"><a href="#3-安装淘宝的cnpm-管理器" class="headerlink" title="3.  安装淘宝的cnpm 管理器"></a>3.  安装淘宝的cnpm 管理器</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">npm install <span class="token operator">-</span>g cnpm <span class="token operator">--</span>registry=http:<span class="token operator">/</span><span class="token operator">/</span>registry<span class="token punctuation">.</span>npm<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_23.png"></p><h2 id="4-安装Hexo"><a href="#4-安装Hexo" class="headerlink" title="4. 安装Hexo"></a>4. 安装Hexo</h2><p>#安装hexo框架</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">cnpm install <span class="token operator">-</span>g hexo<span class="token operator">-</span><span class="token function">cli</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_24.png"></p><p>#查看hexo版本</p><pre class="line-numbers language-none"><code class="language-none">hexo -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_25.png"></p><p>#创建blog目录</p><pre class="line-numbers language-none"><code class="language-none">mkdir blog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>#进入目录</p><pre class="line-numbers language-none"><code class="language-none">cd blog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>#生成博客 初始化博客</p><pre class="line-numbers language-none"><code class="language-none">sudo hexo inithexo init<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>#启动本地博客服务</p><pre class="line-numbers language-none"><code class="language-none">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> #创建新的文章 </p><pre class="line-numbers language-none"><code class="language-none">hexo n &quot;新文章&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_26.png"></p><p>更改文章之后</p><p>#返回blog目录</p><p>#清理</p><pre class="line-numbers language-none"><code class="language-none">hexo clean<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>#生成</p><pre class="line-numbers language-none"><code class="language-none">hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5-部署到Gitee"><a href="#5-部署到Gitee" class="headerlink" title="5. 部署到Gitee"></a>5. 部署到Gitee</h2><p><a href="https://gitee.com/">Gitee官网</a></p><ol><li>注册Gitee</li></ol><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/Gitee-Hexo%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E7%9A%84%E5%8D%9A%E5%AE%A2_01.png"></p><ol start="2"><li>新建仓库</li></ol><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/Gitee-Hexo%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E7%9A%84%E5%8D%9A%E5%AE%A2_02.png"></p><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/Gitee-Hexo%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E7%9A%84%E5%8D%9A%E5%AE%A2_03.png"></p><ol start="3"><li>添加仓库公钥</li></ol><p>进入blog目录文件夹右击 打开Git Bash Here</p><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo_21.png"></p><pre class="line-numbers language-none"><code class="language-none">git config --global user.name &quot;yourname&quot;git config --global user.email &quot;youremail&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Gitee 提供了基于SSH协议的Git服务，在使用SSH协议访问仓库之前，需要先配置好账户/仓库的SSH公钥。</p><p>你可以按如下命令来生成 sshkey:</p><pre class="line-numbers language-none"><code class="language-none">ssh-keygen -t ed25519 -C &quot;xxxxx@xxxxx.com&quot;  # Generating public&#x2F;private ed25519 key pair...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>注意：这里的 <code>xxxxx@xxxxx.com</code> 只是生成的 sshkey 的名称，并不约束或要求具体命名为某个邮箱。<br>现网的大部分教程均讲解的使用邮箱生成，其一开始的初衷仅仅是为了便于辨识所以使用了邮箱。</p></blockquote><p>按照提示完成三次回车，即可生成 ssh key。通过查看 <code>~/.ssh/id_ed25519.pub</code> 文件内容，获取到你的 public key</p><p><img src="/2021/08/27/gitee-hexo-da-jian-mian-fei-de-bo-ke/Gitee-Hexo%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E7%9A%84%E5%8D%9A%E5%AE%A2_05.png"></p><p>复制生成后的 ssh key，通过仓库主页 <strong>「管理」-&gt;「部署公钥管理」-&gt;「添加部署公钥」</strong> ，添加生成的 public key 添加到仓库中。</p><p><img src="https://images.gitee.com/uploads/images/2018/0814/233212_29a62378_551147.png" alt="添加部署公钥"></p><p>Windows用这个：npm install hexo-deployer-git –save</p><p>添加后，在终端（Terminal）中输入</p><pre class="line-numbers language-none"><code class="language-none">ssh -T git@gitee.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>首次使用需要确认并添加主机到本机SSH可信列表。若返回 <code>Hi XXX! You&#39;ve successfully authenticated, but Gitee.com does not provide shell access.</code> 内容，则证明添加成功。</p><p><img src="https://images.gitee.com/uploads/images/2018/0814/170837_4c5ef029_551147.png" alt="SSH添加提示"></p><p>添加成功后，就可以使用SSH协议对仓库进行操作了。</p><ol start="4"><li>在blog目录下安装git部署插件</li></ol><pre class="line-numbers language-none"><code class="language-none">cnpm install --save hexo-deployer-git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="5"><li>配置_config.yml </li></ol><pre class="line-numbers language-none"><code class="language-none"># Deployment## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.htmldeploy: type: gitrepo: https:&#x2F;&#x2F;gitee.com&#x2F;jzgjp6&#x2F;jzgjp6.git branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="6"><li>上传到云端</li></ol><pre class="line-numbers language-none"><code class="language-none">hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 极客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> Gitee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬取B站指定UP主视频列表</title>
      <link href="/2021/07/29/pa-qu-b-zhan-zhi-ding-up-zhu-shi-pin-lie-biao/"/>
      <url>/2021/07/29/pa-qu-b-zhan-zhi-ding-up-zhu-shi-pin-lie-biao/</url>
      
        <content type="html"><![CDATA[<h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><p>​    平常在家看看电影,电视剧,最近剧荒了,在B站看到<a href="https://space.bilibili.com/927587/video?tid=0&page=38&keyword=&order=pubdate"><strong>木鱼水心</strong></a>的一些视频电影解说,他推荐了一些电影和电视剧</p><p>但是他发布的视频太多了 有999个视频以上,一个个去看太累了,重复的事情就交给电脑吧！</p><p><img src="/2021/07/29/pa-qu-b-zhan-zhi-ding-up-zhu-shi-pin-lie-biao/%E7%88%AC%E5%8F%96B%E7%AB%99%E6%8C%87%E5%AE%9AUP%E4%B8%BB%E8%A7%86%E9%A2%91%E5%88%97%E8%A1%A8_01.png"></p><p>有的一部分我看过了比如《肖生克的救赎》《阿甘正传》等等,他推荐的视频很多,我怎么得到这些视频列表呢？</p><p>人生苦短,我用Python</p><h2 id="Python实现"><a href="#Python实现" class="headerlink" title="Python实现"></a>Python实现</h2><p>​    URL=皮皮虾视频的分享链接然后做个拼接就可以使用了</p><p>需要用到的包有</p><ul><li>re(自带)</li><li>json(自带)</li><li>requests(初次安装 <strong>pip install requests</strong>)</li><li>jsonpath(初次安装 <strong>pip install jsonpath</strong>)</li></ul><p>由于不是全部视频都是电影解说 视频标题中带有“木鱼微剧场”关键字的是我需要</p><p>将视频标题取得 然后 做个判断 符合条件就保存到文本文件中</p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re<span class="token punctuation">,</span>requests<span class="token punctuation">,</span>json<span class="token keyword">from</span> jsonpath <span class="token keyword">import</span> jsonpath<span class="token keyword">def</span> <span class="token function">envideolisttitles</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token triple-quoted-string string">'''   解析B站指定UP主的视频列表标题   :param url:视频列表   :return:   '''</span>   headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'Accept'</span><span class="token punctuation">:</span> <span class="token string">'*/*'</span><span class="token punctuation">,</span>      <span class="token string">'Accept-Language'</span><span class="token punctuation">:</span> <span class="token string">'en-US,en;q=0.5'</span><span class="token punctuation">,</span>      <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36'</span><span class="token punctuation">&#125;</span>   req <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>   filedata<span class="token operator">=</span>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>req<span class="token punctuation">.</span>text<span class="token punctuation">)</span>   item_name<span class="token operator">=</span>jsonpath<span class="token punctuation">(</span>filedata<span class="token punctuation">,</span><span class="token string">"$.data.list.vlist.*.title"</span><span class="token punctuation">)</span>   <span class="token keyword">for</span> it <span class="token keyword">in</span> item_name<span class="token punctuation">:</span>      <span class="token keyword">if</span> it<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">"木鱼微剧场"</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>         <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'muyushuixin.txt'</span><span class="token punctuation">,</span><span class="token string">'a+'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            f<span class="token punctuation">.</span>writelines<span class="token punctuation">(</span>it<span class="token operator">+</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>   <span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">38</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      url<span class="token operator">=</span><span class="token string">'https://api.bilibili.com/x/space/arc/search?mid=927587&amp;ps=30&amp;tid=0&amp;pn='</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'&amp;keyword=&amp;order=pubdate&amp;jsonp=jsonp'</span>      <span class="token keyword">print</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>      envideolisttitles<span class="token punctuation">(</span>url<span class="token punctuation">)</span>```<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> B站 </tag>
            
            <tag> bilibili </tag>
            
            <tag> 哔哩哔哩 </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> 视频 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>皮皮虾视频下载线上解析版</title>
      <link href="/2020/10/06/pi-pi-xia-shi-pin-xia-zai-xian-shang-jie-xi-ban/"/>
      <url>/2020/10/06/pi-pi-xia-shi-pin-xia-zai-xian-shang-jie-xi-ban/</url>
      
        <content type="html"><![CDATA[<h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><p>​    皮皮虾无水印下载视频,偶然间发现这个网站</p><p><a href="https://docs.tenapi.cn/ppx.html#%E8%AF%B7%E6%B1%82url">皮皮虾无水印解析</a></p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header-name keyword">http:</span>//tenapi.cn/ppx/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>请求示例</p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header-name keyword">https:</span>//tenapi.cn/ppx/?url=https://h5.pipix.com/s/hukXsy/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>返回数据</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"code"</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>  <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"标题交给你们了。"</span><span class="token punctuation">,</span>  <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"https://p1-ppx.byteimg.com/img/mosaic-legacy/2ab8400068ec7576befea~272x480_q80.jpeg"</span><span class="token punctuation">,</span>  <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://v3-ppx.ixigua.com/5ed98deb58c533527e24ec0220a28992/5f62eec8/video/tos/hxsy/tos-hxsy-ve-0076/41064fc495f04f029e8629421b1352fd/?a=1319&amp;br=1041&amp;bt=347&amp;cr=0&amp;cs=0&amp;dr=3&amp;ds=1&amp;er=&amp;l=2020091712060301001404314826001048&amp;lr=&amp;mime_type=video_mp4&amp;qs=0&amp;rc=anl4PGd0bDl4bjMzZGYzM0ApZGk1NTRpNjs5N2k4NDxnZGctYGsucWdjNDVfLS0yMS9zczMxLV82XjA0NDA0XzMuY2I6Yw%3D%3D&amp;vl=&amp;vr="</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Python实现"><a href="#Python实现" class="headerlink" title="Python实现"></a>Python实现</h2><p>​    URL=皮皮虾视频的分享链接然后做个拼接就可以使用了</p><p>需要用到的包有</p><ul><li>re(自带)</li><li>json(自带)</li><li>requests(初次安装 <strong>pip install requests</strong>)</li></ul><p>为了避免重复下载 我将每个皮皮虾的原始ID和标题作为视频的文件名</p><blockquote><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re<span class="token punctuation">,</span>requests<span class="token punctuation">,</span>json<span class="token triple-quoted-string string">'''皮皮虾无水印下载--解析版本2020-10-06'''</span><span class="token keyword">def</span> <span class="token function">ppxdownloadmp4</span><span class="token punctuation">(</span>ppx_url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment">#ppx_url='https://h5.pipix.com/s/JyeSQ73/'</span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>ppx_url<span class="token punctuation">)</span>    <span class="token comment"># 得到跳转真实URL</span>    jempurl <span class="token operator">=</span> response<span class="token punctuation">.</span>url    <span class="token comment"># 得到视频ID</span>    <span class="token builtin">id</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'https://h5.pipix.com/item/(.*?)\?app_id'</span><span class="token punctuation">,</span> jempurl<span class="token punctuation">)</span>    <span class="token comment">#解析网址</span>    req<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://tenapi.cn/ppx/?url='</span><span class="token operator">+</span>ppx_url<span class="token punctuation">)</span>    html<span class="token operator">=</span>req<span class="token punctuation">.</span>text    <span class="token comment"># print(req)</span>    <span class="token comment"># print(html)</span>    <span class="token comment">#解析JSON</span>    jg<span class="token operator">=</span>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>html<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"无法获得视频ID"</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>jg<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"无法打印标题"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>jg<span class="token punctuation">[</span><span class="token string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    response<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>jg<span class="token punctuation">[</span><span class="token string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    f<span class="token operator">=</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">'_'</span><span class="token operator">+</span>jg<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">'.mp4'</span><span class="token punctuation">,</span><span class="token string">'wb'</span><span class="token punctuation">)</span>    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>response<span class="token punctuation">.</span>content<span class="token punctuation">)</span>    f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            ppx_url <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'输入分享网址：'</span><span class="token punctuation">)</span>            ppxdownloadmp4<span class="token punctuation">(</span>ppx_url<span class="token punctuation">)</span>        <span class="token keyword">except</span> KeyError<span class="token punctuation">:</span>            <span class="token keyword">pass</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>皮皮虾版本： </p><p><img src="/2020/10/06/pi-pi-xia-shi-pin-xia-zai-xian-shang-jie-xi-ban/%E7%9A%AE%E7%9A%AE%E8%99%BE%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E7%BA%BF%E4%B8%8A%E8%A7%A3%E6%9E%90%E7%89%88_01.jpg"></p><ol><li>找到需要下载的视频点 <strong>分享</strong> 按钮</li></ol><p><img src="/2020/10/06/pi-pi-xia-shi-pin-xia-zai-xian-shang-jie-xi-ban/%E7%9A%AE%E7%9A%AE%E8%99%BE%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E7%BA%BF%E4%B8%8A%E8%A7%A3%E6%9E%90%E7%89%88_02.png"></p><ol start="2"><li>选择 <strong>复制链接</strong></li></ol><p><img src="/2020/10/06/pi-pi-xia-shi-pin-xia-zai-xian-shang-jie-xi-ban/%E7%9A%AE%E7%9A%AE%E8%99%BE%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E7%BA%BF%E4%B8%8A%E8%A7%A3%E6%9E%90%E7%89%88_03.png"></p><ol start="3"><li>在运行的ppx.py 中粘贴刚刚的地址 回车 将打印该视频的ID 和 标题 如果标题有特殊表情则打印失败</li></ol><p><img src="/2020/10/06/pi-pi-xia-shi-pin-xia-zai-xian-shang-jie-xi-ban/%E7%9A%AE%E7%9A%AE%E8%99%BE%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E7%BA%BF%E4%B8%8A%E8%A7%A3%E6%9E%90%E7%89%88_04.png"></p><ol start="4"><li>最终效果</li></ol><p><img src="/2020/10/06/pi-pi-xia-shi-pin-xia-zai-xian-shang-jie-xi-ban/%E7%9A%AE%E7%9A%AE%E8%99%BE%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E7%BA%BF%E4%B8%8A%E8%A7%A3%E6%9E%90%E7%89%88_05.png"></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
            <tag> 视频 </tag>
            
            <tag> 皮皮虾 </tag>
            
            <tag> 视频解析 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
